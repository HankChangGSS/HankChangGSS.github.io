[{"title":"PyCharm 更新方式 ( openSUSE )","url":"/2021/02/15/202102/20210215-PyCharm_update/","content":"<div class=\"note default\">\n            <p>PyCharm 更新方式  ( openSUSE )</p>\n          </div>\n\n<a id=\"more\"></a>\n\n<h2 id=\"PyCharm-更新方式\"><a href=\"#PyCharm-更新方式\" class=\"headerlink\" title=\"PyCharm 更新方式\"></a>PyCharm 更新方式</h2><p>1.用捷徑執行時，無root權限，所以無法直接執行IDE中的 “update” 連結</p>\n<p>2.至官網下載最新版本 ( pycharm-community-2020.3.3.tar.gz )<br><a href=\"https://www.jetbrains.com/pycharm/download/#section=linux\">Download PyCharm</a></p>\n<p>3.下載後的檔案預設位置為 /home/hcc/Downloads/</p>\n<p>4.解壓縮</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo tar zxvf /home/hcc/Downloads/pycharm-community-2020.3.3.tar.gz -C /opt/</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>參考文章<br><a href=\"https://www.opencli.com/linux/linux-unpack-tgz\">Linux 壓縮及解壓 .tgz 及 .tar.gz 檔</a></li>\n</ul>\n<p>5.更新桌面捷徑 (開啟位置)</p>\n","categories":["技術","linux"],"tags":["linux","opensuse","pycharm"]},{"title":"VMWare 安裝 Linux 之記錄及備忘事項 ( 主要是 openSUSE )","url":"/2020/12/16/202012/20201216-LinuxOpenSuse/","content":"<div class=\"note default\">\n            <p>VMWare 安裝 Linux 之記錄及備忘事項 (含嘸蝦米輸入法)</p>\n          </div>\n\n<a id=\"more\"></a>\n\n<h2 id=\"VMwareTools-更新-安裝過程全用預設值\"><a href=\"#VMwareTools-更新-安裝過程全用預設值\" class=\"headerlink\" title=\"VMwareTools 更新 (安裝過程全用預設值)\"></a>VMwareTools 更新 (安裝過程全用預設值)</h2><h3 id=\"步驟一\"><a href=\"#步驟一\" class=\"headerlink\" title=\"步驟一\"></a>步驟一</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">tar -zxvf VMwareTools-10.3.21-14772444.tar.gz -C /tmp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/vmware-tools-distrib</span><br><span class=\"line\"></span><br><span class=\"line\">sudo ./vmware-install.pl</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.itread01.com/p/1377180.html\">VMWare Tools 和 Shared folder（共享資料夾）</a></p>\n<h3 id=\"步驟二-無報錯即表示成功，檔案總管需重開\"><a href=\"#步驟二-無報錯即表示成功，檔案總管需重開\" class=\"headerlink\" title=\"步驟二 (無報錯即表示成功，檔案總管需重開)\"></a>步驟二 (無報錯即表示成功，檔案總管需重開)</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vmhgfs-fuse .host:/ /mnt/hgfs -o subtype=vmhgfs-fuse,allow_other</span><br><span class=\"line\"></span><br><span class=\"line\">ls /mnt/hgfs</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://blog.csdn.net/hcu5555/article/details/107182222\">kali2020挂载共享文件夹（挂载hgfs共享文件）</a></p>\n<h3 id=\"步驟三-編輯-fstab-檔案\"><a href=\"#步驟三-編輯-fstab-檔案\" class=\"headerlink\" title=\"步驟三 編輯 fstab 檔案\"></a>步驟三 編輯 fstab 檔案</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/fstab</span><br></pre></td></tr></table></figure>\n<p>結果參考如下</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">UUID=0f4ae7dd-1572-49c8-8849-dde58db9b6a7  /                       btrfs  defaults                      0  0</span><br><span class=\"line\">UUID=0f4ae7dd-1572-49c8-8849-dde58db9b6a7  /var                    btrfs  subvol=/@/var                 0  0</span><br><span class=\"line\">UUID=0f4ae7dd-1572-49c8-8849-dde58db9b6a7  /usr/local              btrfs  subvol=/@/usr/local           0  0</span><br><span class=\"line\">UUID=0f4ae7dd-1572-49c8-8849-dde58db9b6a7  /srv                    btrfs  subvol=/@/srv                 0  0</span><br><span class=\"line\">UUID=0f4ae7dd-1572-49c8-8849-dde58db9b6a7  /root                   btrfs  subvol=/@/root                0  0</span><br><span class=\"line\">UUID=0f4ae7dd-1572-49c8-8849-dde58db9b6a7  /opt                    btrfs  subvol=/@/opt                 0  0</span><br><span class=\"line\">UUID=0f4ae7dd-1572-49c8-8849-dde58db9b6a7  /home                   btrfs  subvol=/@/home                0  0</span><br><span class=\"line\">UUID=0f4ae7dd-1572-49c8-8849-dde58db9b6a7  /boot/grub2/x86_64-efi  btrfs  subvol=/@/boot/grub2/x86_64-efi  0  0</span><br><span class=\"line\">UUID=0f4ae7dd-1572-49c8-8849-dde58db9b6a7  /boot/grub2/i386-pc     btrfs  subvol=/@/boot/grub2/i386-pc  0  0</span><br><span class=\"line\">UUID=0f4ae7dd-1572-49c8-8849-dde58db9b6a7  /.snapshots             btrfs  subvol=/@/.snapshots          0  0</span><br><span class=\"line\">UUID=7c1839cf-5194-4a36-9470-2b7c2c4ff2f9  swap                    swap   defaults                      0  0</span><br><span class=\"line\"># mount hgfs</span><br><span class=\"line\">.host:/       /mnt/hgfs        fuse.vmhgfs-fuse       allow_other     0       0</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"調整開機時倒數等待之預設時間\"><a href=\"#調整開機時倒數等待之預設時間\" class=\"headerlink\" title=\"調整開機時倒數等待之預設時間\"></a>調整開機時倒數等待之預設時間</h2><p>1.導​​航到Yast-&gt;系統-&gt; Bootloader<br>2.單擊Bootloader安裝選項卡，然後單擊Boot Loader選項按鈕<br>3.在“秒數超時”字段下，更改從8秒到2秒之間的數字<br>4.單擊OK（確定）按鈕應用更改<br><a href=\"https://forums.opensuse.org/showthread.php/412324-How-to-make-GRUB-countdown-shorter\">How to make GRUB countdown shorter?</a></p>\n<h2 id=\"安裝無蝦米-嘸蝦米\"><a href=\"#安裝無蝦米-嘸蝦米\" class=\"headerlink\" title=\"安裝無蝦米 (嘸蝦米)\"></a>安裝無蝦米 (嘸蝦米)</h2><h3 id=\"重要步驟\"><a href=\"#重要步驟\" class=\"headerlink\" title=\"重要步驟\"></a>重要步驟</h3><p>1.解壓縮得出 noseeing.gtab<br>2.安裝gcin (yast)<br>3.開啟Kansole sudo cp noseeing.gtab /usr/share/gcin/table (無法直接用檔案總管複製)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">zypper install gcc</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字典檔備份\"><a href=\"#字典檔備份\" class=\"headerlink\" title=\"字典檔備份\"></a>字典檔備份</h3><p>/2020/12/16/202012/20201216-LinuxOpenSuse/noseeing.gtab</p>\n<h3 id=\"參考文章複製\"><a href=\"#參考文章複製\" class=\"headerlink\" title=\"參考文章複製\"></a>參考文章複製</h3><p>無蝦米安裝程序：</p>\n<ol>\n<li>於/etc/apt/sources.lst 加入這行<br>deb <a href=\"http://www.calno.com/\">http://www.calno.com</a> unstable main</li>\n<li>sudo apt-get update;sudo apt-get install gcin (安裝gcin)</li>\n<li>sudo im-switch -s gcin (下次登入即可使用gcin)</li>\n<li>wget <a href=\"http://edt1023.sayya.org/misc/noseeing-6.tar.gz\">http://edt1023.sayya.org/misc/noseeing-6.tar.gz</a> (下載無蝦米表格檔)</li>\n<li>tar zxvf noseeing-6.tar.gz</li>\n<li>sudo cp noseeing.gtab /usr/share/gcin/table/</li>\n<li>(system restart)<br><a href=\"https://blog.xuite.net/jiazhe/running/14152737\">Ubuntu gcin使用無蝦米輸入法</a></li>\n</ol>\n<h3 id=\"其他參考文章\"><a href=\"#其他參考文章\" class=\"headerlink\" title=\"其他參考文章\"></a>其他參考文章</h3><p><a href=\"https://neroli.pixnet.net/blog/post/30476744\">電腦文 OpenSuse Server上安裝gcin中文輸入法</a><br><a href=\"https://www.ubuntu-tw.org/modules/newbb/viewtopic.php?post_id=360134\">請問在英文語系的ubuntu，無法輸入中文    論壇 - Ubuntu基本設定</a></p>\n<h2 id=\"PyCharm-Python-Debugger-Extension-未整理筆記\"><a href=\"#PyCharm-Python-Debugger-Extension-未整理筆記\" class=\"headerlink\" title=\"PyCharm Python Debugger Extension 未整理筆記\"></a>PyCharm Python Debugger Extension 未整理筆記</h2><ul>\n<li>未安裝前，執行偵錯時會跳出提示，建議使用者安裝 Python Debugger Extension</li>\n<li>安裝的過程有些許繁瑣<br>2020-11-18<br>11:17    Python Debugger Extension Available<pre><code>      Cython extension speeds up Python debugging\n      Install   How does it work</code></pre>\n</li>\n</ul>\n<p>install ok</p>\n<h2 id=\"Software-Updates-更新指令\"><a href=\"#Software-Updates-更新指令\" class=\"headerlink\" title=\"Software Updates 更新指令\"></a>Software Updates 更新指令</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo zypper dup</span><br></pre></td></tr></table></figure>","categories":["技術","linux"],"tags":["linux","opensuse","pycharm","vmware","嘸蝦米"]},{"title":"實體機安裝 openSUSE (1)","url":"/2021/03/09/202103/20210309-InstallopenSUSE01/","content":"<div class=\"note default\">\n            <p>實體機安裝 openSUSE (1)</p>\n          </div>\n\n<a id=\"more\"></a>\n\n<h2 id=\"實體機安裝-openSUSE-1\"><a href=\"#實體機安裝-openSUSE-1\" class=\"headerlink\" title=\"實體機安裝 openSUSE (1)\"></a>實體機安裝 openSUSE (1)</h2><h3 id=\"下載-openSUSE-Tumbleweed-ISO\"><a href=\"#下載-openSUSE-Tumbleweed-ISO\" class=\"headerlink\" title=\"下載 openSUSE Tumbleweed ISO\"></a>下載 openSUSE Tumbleweed ISO</h3><ul>\n<li>至 <a href=\"https://get.opensuse.org/tumbleweed\">openSUSE 官網</a> 找到 <a href=\"https://download.opensuse.org/tumbleweed/iso/openSUSE-Tumbleweed-DVD-x86_64-Current.iso\">iso 下載位置</a>，將它下載後儲存，之後會使用到。<br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/openSUSE01.png\" alt=\"desc\"></li>\n<li>本日 (2021/03/09) 所下載的檔案，版本為 openSUSE-Tumbleweed-DVD-x86_64-Snapshot20210307-Media.iso</li>\n</ul>\n<h3 id=\"下載-Clonezilla-再生龍-ISO\"><a href=\"#下載-Clonezilla-再生龍-ISO\" class=\"headerlink\" title=\"下載 Clonezilla 再生龍 ISO\"></a>下載 Clonezilla 再生龍 ISO</h3><ul>\n<li>至 <a href=\"https://clonezilla.nchc.org.tw/clonezilla-live/download/download.php?branch=stable\">Clonezilla 再生龍 官網下載</a>頁面，依下列選項點選下載按鈕<br>選擇 CPU 架構: amd64<br>選擇 檔案類別: iso<br>選擇 檔案儲藏庫: auto<br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/openSUSE02.png\" alt=\"desc\"></li>\n<li>本日 (2021/03/09) 所下載的檔案，版本為: ( 發行分支: stable; Clonezilla live 版本: 2.7.1-22 ) clonezilla-live-2.7.1-22-amd64.iso</li>\n</ul>\n<h3 id=\"使用現成的-linux-VM-將-ISO-做成可開機的-USB\"><a href=\"#使用現成的-linux-VM-將-ISO-做成可開機的-USB\" class=\"headerlink\" title=\"使用現成的 linux VM 將 ISO 做成可開機的 USB\"></a>使用現成的 linux VM 將 ISO 做成可開機的 USB</h3><p><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/openSUSE03.png\" alt=\"desc\"></p>\n<h4 id=\"安裝-Image-Writer-程式\"><a href=\"#安裝-Image-Writer-程式\" class=\"headerlink\" title=\"安裝 Image Writer 程式\"></a>安裝 Image Writer 程式</h4><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo zypper install imagewriter</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/imagewriter.png\" alt=\"desc\"></p>\n<p>ref. <a href=\"https://zh-tw.opensuse.org/SDB:Live_USB_%E9%9A%A8%E8%BA%AB%E7%A2%9F\">SDB:Live USB 隨身碟</a></p>\n<p>註:<br>如使用的 USB 中有資料需備份<br>可考慮使用 <a href=\"https://www.portablefreeware.com/?id=583\">ImgBurn_2.5.8.0</a> 做成一個 ISO 檔</p>\n<h4 id=\"製作-USB-開機碟\"><a href=\"#製作-USB-開機碟\" class=\"headerlink\" title=\"製作 USB 開機碟\"></a>製作 USB 開機碟</h4><ol>\n<li><p>打開 SUSE Studio ImageWriter<br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/img01.png\" alt=\"desc\"></p>\n</li>\n<li><p>將 下載後的 Clonezilla 再生龍 ISO 拖曳進程式視窗中<br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/img02.png\" alt=\"desc\"></p>\n</li>\n<li><p>確認欲寫入的 USB 磁碟有正確選中後，按下 「Write」按鈕<br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/img03.png\" alt=\"desc\"></p>\n</li>\n<li><p>出現警告視窗時，按下 「OK」按鈕<br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/img04.png\" alt=\"desc\"></p>\n</li>\n<li><p>輸入密碼後，按下 「OK」按鈕<br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/img05.png\" alt=\"desc\"></p>\n</li>\n<li><p>等待程式製作 USB 開機碟<br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/img06.png\" alt=\"desc\"></p>\n</li>\n<li><p>重複上述步驟，製作 openSUSE Tumbleweed ISO 的 USB 開機碟<br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/img07.png\" alt=\"desc\"></p>\n</li>\n</ol>\n<h3 id=\"安裝-openSUSE-Tumbleweed\"><a href=\"#安裝-openSUSE-Tumbleweed\" class=\"headerlink\" title=\"安裝 openSUSE Tumbleweed\"></a>安裝 openSUSE Tumbleweed</h3><p>以下直接附上安裝過程截圖<br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INS01.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INS02.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INS03.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INS04.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INS05.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP01.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP02.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP03.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP04.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP05.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP06.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP07.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP08.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP09.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP10.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP11.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP12.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP13.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP14.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP15.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP16.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP17.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP18.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP19.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP20.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP21.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP22.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP23.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP24.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP25.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP26.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP27.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP28.png\" alt=\"desc\"><br><img src=\"/2021/03/09/202103/20210309-InstallopenSUSE01/INSOP29.png\" alt=\"desc\"></p>\n","categories":["技術","linux"],"tags":["linux","opensuse"]},{"title":"hexo 部署到 github 的備忘錄","url":"/2021/02/15/202102/20210215-hexo_deploy/","content":"<div class=\"note default\">\n            <p>使用 TortoiseGit 透過 SSH 操作多個 GitHub 帳號</p>\n          </div>\n\n<div class=\"note default\">\n            <p>hexo 部署至 github</p>\n          </div>\n\n<div class=\"note default\">\n            <p>hexo 隱藏文章</p>\n          </div>\n\n<a id=\"more\"></a>\n\n<h2 id=\"使用-TortoiseGit-透過-SSH-操作多個-GitHub-帳號\"><a href=\"#使用-TortoiseGit-透過-SSH-操作多個-GitHub-帳號\" class=\"headerlink\" title=\"使用 TortoiseGit 透過 SSH 操作多個 GitHub 帳號\"></a>使用 TortoiseGit 透過 SSH 操作多個 GitHub 帳號</h2><ul>\n<li><p>參考文章<br><a href=\"https://dotblogs.com.tw/supershowwei/2017/09/14/142407\">使用 TortoiseGit 透過 SSH 操作多個 GitHub 帳號</a></p>\n</li>\n<li><p>實作<br>TortoiseGit clone時的修改 (使用session)<br>(預設) <a href=\"mailto:&#x67;&#x69;&#x74;&#x40;&#103;&#x69;&#x74;&#x68;&#x75;&#98;&#x2e;&#x63;&#x6f;&#109;\">&#x67;&#x69;&#x74;&#x40;&#103;&#x69;&#x74;&#x68;&#x75;&#98;&#x2e;&#x63;&#x6f;&#109;</a>:HankChangGSS/HankChangGSS.github.io.git<br>(修改) git@HankChangGSS_github:HankChangGSS/HankChangGSS.github.io.git<br><img src=\"/2021/02/15/202102/20210215-hexo_deploy/ssh.png\" alt=\"ssh\"></p>\n</li>\n</ul>\n<h2 id=\"hexo-部署至-github\"><a href=\"#hexo-部署至-github\" class=\"headerlink\" title=\"hexo 部署至 github\"></a>hexo 部署至 github</h2><ul>\n<li><p>參考文章<br><a href=\"https://blackmaple.me/hexo-tutorial/\">Hexo+GitHub，新手也可以快速建立部落格</a></p>\n</li>\n<li><p>需先安裝 hexo-deployer-git</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">D:\\<span class=\"title\">Blog</span>\\<span class=\"title\">HankMemoCopy</span>&gt;<span class=\"title\">npm</span> <span class=\"title\">install</span> <span class=\"title\">hexo</span>-<span class=\"title\">deployer</span>-<span class=\"title\">git</span> --<span class=\"title\">save</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>_config.yml 修改前</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> </span><br></pre></td></tr></table></figure>\n</li>\n<li><p>_config.yml 修改後</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repository:</span> <span class=\"string\">https://github.com/HankChangGSS/HankChangGSS.github.io</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>部署指令</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo d -g</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>待處理 (部署時，每次仍需輸入帳密，需再查看是否有解決方式)<br>帳號: <a href=\"mailto:&#104;&#x61;&#x6e;&#107;&#99;&#x68;&#x61;&#x6e;&#x67;&#103;&#x73;&#115;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#104;&#x61;&#x6e;&#107;&#99;&#x68;&#x61;&#x6e;&#x67;&#103;&#x73;&#115;&#64;&#103;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a><br><a href=\"https://hankchanggss.github.io/\">部署位置</a></p>\n</li>\n</ul>\n<h2 id=\"hexo-隱藏文章\"><a href=\"#hexo-隱藏文章\" class=\"headerlink\" title=\"hexo 隱藏文章\"></a>hexo 隱藏文章</h2><ul>\n<li><p>參考文章<br><a href=\"https://www.jensenhong.com/2020/10/02/hexo-next-hidden-post/\">hexo+next下隐藏文章与其导航|hexo+next-hidden-post</a></p>\n</li>\n<li><p>安裝 hexo-hide-posts</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-hide-posts --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>文章 title</p>\n<figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &#x27;Lorem Ipsum&#x27;</span><br><span class=\"line\">date: &#x27;2019/8/10 11:45:14&#x27;</span><br><span class=\"line\">hidden: true</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></li>\n</ul>\n","categories":["技術","hexo"],"tags":["hexo"]},{"title":"數位貨幣-交易所測試 (1)","url":"/2021/03/10/202103/20210310-DigiCur/","content":"<div class=\"note default\">\n            <p>數位貨幣-交易所測試 (1)</p>\n          </div>\n\n<a id=\"more\"></a>\n\n<h2 id=\"MAX-交易所\"><a href=\"#MAX-交易所\" class=\"headerlink\" title=\"MAX 交易所\"></a>MAX 交易所</h2><h3 id=\"申請-MAX-帳號，並通過-Level-2-審核，之後才能以新台幣出入金\"><a href=\"#申請-MAX-帳號，並通過-Level-2-審核，之後才能以新台幣出入金\" class=\"headerlink\" title=\"申請 MAX 帳號，並通過 Level 2 審核，之後才能以新台幣出入金\"></a>申請 MAX 帳號，並通過 Level 2 審核，之後才能以新台幣出入金</h3><ol>\n<li><p>app 中可以確認申請狀態。<br><img src=\"/2021/03/10/202103/20210310-DigiCur/MAX01.jpg\" alt=\"desc\"></p>\n</li>\n<li><p>通過銀行帳號驗證後，會收到簡訊通知。<br><img src=\"/2021/03/10/202103/20210310-DigiCur/MAX02.jpg\" alt=\"desc\"></p>\n</li>\n<li><p>app 中可以看到專屬的入金帳號。<br><img src=\"/2021/03/10/202103/20210310-DigiCur/MAX03.jpg\" alt=\"desc\"><br><img src=\"/2021/03/10/202103/20210310-DigiCur/MAX04.jpg\" alt=\"desc\"></p>\n</li>\n</ol>\n<h3 id=\"實際轉帳測試\"><a href=\"#實際轉帳測試\" class=\"headerlink\" title=\"實際轉帳測試\"></a>實際轉帳測試</h3><ol>\n<li><p>使用網路銀行轉帳至專屬的入金帳號。<br><img src=\"/2021/03/10/202103/20210310-DigiCur/MAX05.jpg\" alt=\"desc\"></p>\n</li>\n<li><p>轉帳完成時，手機也會立刻收到簡訊通知。<br><img src=\"/2021/03/10/202103/20210310-DigiCur/MAX06.jpg\" alt=\"desc\"></p>\n</li>\n<li><p>app 中可以立刻看到轉入的金額，有全數轉入不會收任何手續費。<br><img src=\"/2021/03/10/202103/20210310-DigiCur/MAX07.jpg\" alt=\"desc\"></p>\n</li>\n</ol>\n<p>註1:<br>由於想買的數位貨幣是 Flow ，不算是太熱門的種類，只有大型交易所可以買得到。<br>加上安全性的考量，所以想在國外的交易所申請帳號，最終選擇了 Kraken 交易所。<br>前述的 MAX 交易所，只是為了方便用新台幣出入金 (再透過購買 USDT 對轉至 Kraken)。</p>\n<p>註2:<br>實際在 app 交易時，杯具了，下單數量至少需 8 USDT，<br>所以兩交易所對轉的部份，留待下回測試。<br><img src=\"/2021/03/10/202103/20210310-DigiCur/MAX08.jpg\" alt=\"desc\"></p>\n","categories":["fintech"],"tags":["digital currency"]},{"title":"實體機安裝 openSUSE (2)","url":"/2021/03/11/202103/20210311-InstallopenSUSE02/","content":"<div class=\"note default\">\n            <p>實體機安裝 openSUSE (2)</p>\n          </div>\n\n<a id=\"more\"></a>\n\n<h2 id=\"實體機安裝-openSUSE-2\"><a href=\"#實體機安裝-openSUSE-2\" class=\"headerlink\" title=\"實體機安裝 openSUSE (2)\"></a>實體機安裝 openSUSE (2)</h2><h3 id=\"使用-KDE-Partition-Manager-分割硬碟\"><a href=\"#使用-KDE-Partition-Manager-分割硬碟\" class=\"headerlink\" title=\"使用 KDE Partition Manager 分割硬碟\"></a>使用 KDE Partition Manager 分割硬碟</h3><h4 id=\"安裝-KDE-Partition-Manager\"><a href=\"#安裝-KDE-Partition-Manager\" class=\"headerlink\" title=\"安裝 KDE Partition Manager\"></a>安裝 KDE Partition Manager</h4><ol>\n<li><p>搜尋 KDE Partition Manager<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/KDE01.png\" alt=\"desc\"></p>\n</li>\n<li><p>Install<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/KDE02.png\" alt=\"desc\"></p>\n</li>\n<li><p>輸入密碼<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/KDE03.png\" alt=\"desc\"></p>\n</li>\n<li><p>安裝完成<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/KDE04.png\" alt=\"desc\"></p>\n</li>\n</ol>\n<h4 id=\"執行-KDE-Partition-Manager\"><a href=\"#執行-KDE-Partition-Manager\" class=\"headerlink\" title=\"執行 KDE Partition Manager\"></a>執行 KDE Partition Manager</h4><ol>\n<li><p>搜尋 KDE Partition Manager<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/KDE05.png\" alt=\"desc\"></p>\n</li>\n<li><p>輸入密碼並勾選儲存<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/KDE06.png\" alt=\"desc\"></p>\n</li>\n<li><p>在系統碟按右鍵 -&gt; Resize/Move<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/KDE07.png\" alt=\"desc\"></p>\n</li>\n<li><p>設定新的分割之大小<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/KDE08.png\" alt=\"desc\"></p>\n</li>\n<li><p>空餘出來的容量右鍵 -&gt; New<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/KDE09.png\" alt=\"desc\"></p>\n</li>\n<li><p>指定檔案系統及磁區名稱<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/KDE10.png\" alt=\"desc\"></p>\n</li>\n</ol>\n<h4 id=\"完成磁碟分割作業\"><a href=\"#完成磁碟分割作業\" class=\"headerlink\" title=\"完成磁碟分割作業\"></a>完成磁碟分割作業</h4><ol>\n<li><p>按下 Apply<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/KDE11.png\" alt=\"desc\"></p>\n</li>\n<li><p>確認<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/KDE12.png\" alt=\"desc\"></p>\n</li>\n<li><p>完成<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/KDE13.png\" alt=\"desc\"></p>\n</li>\n</ol>\n<h3 id=\"再生龍-開機碟-做系統備份\"><a href=\"#再生龍-開機碟-做系統備份\" class=\"headerlink\" title=\"再生龍 開機碟 做系統備份\"></a>再生龍 開機碟 做系統備份</h3><h4 id=\"設定-BIOS-開機順序\"><a href=\"#設定-BIOS-開機順序\" class=\"headerlink\" title=\"設定 BIOS 開機順序\"></a>設定 BIOS 開機順序</h4><ol>\n<li><p>裝上 CloneZilla 開機 USB (或開機光碟)後，將電腦開機 (可按 F2 功能鍵設定開機順序)</p>\n</li>\n<li><p>進入 BIOS 設定畫面<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/boot01.png\" alt=\"desc\"></p>\n</li>\n<li><p>切換到 Boot 頁籤，設定好正確的開機順序<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/boot02.png\" alt=\"desc\"></p>\n</li>\n<li><p>切換到 Exit 頁籤，將設定儲存後離開，並重新開機<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/boot03.png\" alt=\"desc\"></p>\n</li>\n</ol>\n<h4 id=\"CloneZilla-備份作業\"><a href=\"#CloneZilla-備份作業\" class=\"headerlink\" title=\"CloneZilla 備份作業\"></a>CloneZilla 備份作業</h4><p><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone01.png\" alt=\"clone01\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone02.png\" alt=\"clone02\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone03.png\" alt=\"clone03\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone04.png\" alt=\"clone04\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone05.png\" alt=\"clone05\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone06.png\" alt=\"clone06\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone07.png\" alt=\"clone07\"></p>\n<ul>\n<li><p>裝上欲備份的磁碟 (或 USB ) 之前，最好先確認是 FAT32 (可先格式化)，避免再生龍軟體無法偵測得到該磁碟。<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone09.png\" alt=\"clone08\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone08.png\" alt=\"clone09\"></p>\n</li>\n<li><p>此處需確認有辨認出欲儲存的磁碟。<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone10.png\" alt=\"clone10\"></p>\n</li>\n</ul>\n<p><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone11.png\" alt=\"clone11\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone12.png\" alt=\"clone12\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone13.png\" alt=\"clone13\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone14.png\" alt=\"clone14\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone15.png\" alt=\"clone15\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone16.png\" alt=\"clone16\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone17.png\" alt=\"clone17\"></p>\n<ul>\n<li><p>此處需確認有選到真正欲備份的系統磁區，以免備份錯誤。<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone18.png\" alt=\"clone18\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone19.png\" alt=\"clone19\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone20.png\" alt=\"clone20\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone21.png\" alt=\"clone21\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone22.png\" alt=\"clone22\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone23.png\" alt=\"clone23\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone24.png\" alt=\"clone24\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone25.png\" alt=\"clone25\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone26.png\" alt=\"clone26\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone27.png\" alt=\"clone27\"></p>\n</li>\n<li><p>備份完畢後，視實際需要選重開機或關機等正確的選項。<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/clone28.png\" alt=\"clone28\"></p>\n</li>\n</ul>\n<h3 id=\"再生龍-系統還原測試\"><a href=\"#再生龍-系統還原測試\" class=\"headerlink\" title=\"再生龍 系統還原測試\"></a>再生龍 系統還原測試</h3><ul>\n<li>欲確認再生龍軟體是否可正確還原，首先在桌面隨便新增一個檔案，假設是現實環境中不小心發生的錯誤操作，看看是否能還原至錯誤前的備份狀態。<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore01.png\" alt=\"restore01\"></li>\n</ul>\n<p><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore02.png\" alt=\"restore02\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore03.png\" alt=\"restore03\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore04.png\" alt=\"restore04\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore05.png\" alt=\"restore05\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore06.png\" alt=\"restore06\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore07.png\" alt=\"restore07\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore08.png\" alt=\"restore08\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore09.png\" alt=\"restore09\"></p>\n<ul>\n<li><p>這裡要確定有放入欲還原的備份印象檔<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore10.png\" alt=\"restore10\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore11.png\" alt=\"restore11\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore12.png\" alt=\"restore12\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore13.png\" alt=\"restore13\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore14.png\" alt=\"restore14\"></p>\n</li>\n<li><p>還原印象檔到本機分割區<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore15.png\" alt=\"restore15\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore16.png\" alt=\"restore16\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore17.png\" alt=\"restore17\"></p>\n</li>\n<li><p>這裡磁區記得不要選錯<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore18.png\" alt=\"restore18\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore19.png\" alt=\"restore19\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore20.png\" alt=\"restore20\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore21.png\" alt=\"restore21\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore22.png\" alt=\"restore22\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore23.png\" alt=\"restore23\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore24.png\" alt=\"restore24\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore25.png\" alt=\"restore25\"><br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore26.png\" alt=\"restore26\"></p>\n</li>\n<li><p>進系統確認有正確還原完畢<br><img src=\"/2021/03/11/202103/20210311-InstallopenSUSE02/restore27.png\" alt=\"restore27\"></p>\n</li>\n</ul>\n","categories":["技術","linux"],"tags":["linux","opensuse"]},{"title":"櫃買-券商買賣證券日報表研究","url":"/2021/03/14/202103/20210314-tpex_brokerBS/","content":"<div class=\"note default\">\n            <p>櫃買-券商買賣證券日報表研究</p>\n          </div>\n\n<a id=\"more\"></a>\n\n<h2 id=\"櫃買-券商買賣證券日報表研究\"><a href=\"#櫃買-券商買賣證券日報表研究\" class=\"headerlink\" title=\"櫃買-券商買賣證券日報表研究\"></a>櫃買-券商買賣證券日報表研究</h2><h3 id=\"櫃買-券商買賣證券日報表-VS-我不是機器人\"><a href=\"#櫃買-券商買賣證券日報表-VS-我不是機器人\" class=\"headerlink\" title=\"櫃買-券商買賣證券日報表 VS 我不是機器人\"></a>櫃買-券商買賣證券日報表 VS 我不是機器人</h3><ul>\n<li><a href=\"https://www.tpex.org.tw/web/stock/aftertrading/broker_trading/brokerBS.php?l=zh-tw\">券商買賣證券日報表查詢系統（一般交易）</a><br>此系統可取得最近一日的上櫃買賣日報。但網站加了 google 的 「我不是機器人」驗證，以避免程式抓取。 (<a href=\"https://developers.google.com/recaptcha/docs/display\">reCAPTCHA v2</a>)。</li>\n<li>網站中有一個隱藏的 textarea<br><img src=\"/2021/03/14/202103/20210314-tpex_brokerBS/1.png\" alt=\"reCAPTCHA\"></li>\n<li>可以先行手動修改 html，然後將驗證複製出來。這個驗證可以放在 postdata 中，只要驗證尚未過期，是可以透過程式抓取最終的 csv 檔的。<br><img src=\"/2021/03/14/202103/20210314-tpex_brokerBS/2.png\" alt=\"GRecaptchaResponse\"></li>\n</ul>\n<h3 id=\"破解驗證的-api\"><a href=\"#破解驗證的-api\" class=\"headerlink\" title=\"破解驗證的 api\"></a>破解驗證的 api</h3><p><a href=\"https://anti-captcha.com/clients/reports/dashboard\">anti-captcha</a>網站有提供「我不是機器人」的破解服務。以下就實際註冊帳號並實作破解驗證並下載資料。</p>\n<ol>\n<li>註冊帳號，使用 google 登入即可。<br><img src=\"/2021/03/14/202103/20210314-tpex_brokerBS/3.png\" alt=\"desc\"></li>\n<li>Accept User Agreement<br><img src=\"/2021/03/14/202103/20210314-tpex_brokerBS/4.png\" alt=\"accept\"></li>\n<li>註冊完成後，可以看到帳戶餘額以及金鑰，這個金鑰是在使用 api 時需用到的。同時也可以看到，每使用 1000 次「我不是機器人」的破解服務，費用是 2 美金。<br><img src=\"/2021/03/14/202103/20210314-tpex_brokerBS/5.png\" alt=\"registered\"></li>\n<li>在 Finance 選單中，可以使用 Demo Credit 功能，輸入自己的手機後，可以獲得 $0.01 至 $0.1 美金的試用額度。<br><img src=\"/2021/03/14/202103/20210314-tpex_brokerBS/6.png\" alt=\"demo1\"><br><img src=\"/2021/03/14/202103/20210314-tpex_brokerBS/7.png\" alt=\"demo2\"></li>\n<li>接下來可以看網站中的 api 教學文件<br><img src=\"/2021/03/14/202103/20210314-tpex_brokerBS/8.png\" alt=\"decuments\"></li>\n<li>其中也有提供 <a href=\"https://github.com/AdminAnticaptcha/anticaptcha-csharp\">C# 範例程式 (github)</a><br><img src=\"/2021/03/14/202103/20210314-tpex_brokerBS/9.png\" alt=\"c#\"></li>\n<li>將取得的範例程式，改寫如下<figure class=\"highlight csharp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ExampleRecaptcha2Proxyless</span>(<span class=\"params\"><span class=\"keyword\">string</span> url</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">string</span> result = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\"></span><br><span class=\"line\">    DebugHelper.VerboseMode = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> api = <span class=\"keyword\">new</span> RecaptchaV2Proxyless</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ClientKey = ClientKey,</span><br><span class=\"line\">        WebsiteUrl = <span class=\"keyword\">new</span> Uri(url),</span><br><span class=\"line\">        <span class=\"comment\">//WebsiteUrl = new Uri(&quot;https://www.tpex.org.tw/web/stock/aftertrading/broker_trading/brokerBS.php?l=zh-tw&quot;),</span></span><br><span class=\"line\">        WebsiteKey = <span class=\"string\">&quot;6LcCoP8SAAAAAKzsvbTXymxqNWcC-dAhDYik0V3C&quot;</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!api.CreateTask())</span><br><span class=\"line\">        DebugHelper.Out(<span class=\"string\">&quot;API v2 send failed. &quot;</span> + api.ErrorMessage, DebugHelper.Type.Error);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!api.WaitForResult())</span><br><span class=\"line\">        DebugHelper.Out(<span class=\"string\">&quot;Could not solve the captcha.&quot;</span>, DebugHelper.Type.Error);</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        DebugHelper.Out(<span class=\"string\">&quot;Result: &quot;</span> + api.GetTaskSolution().GRecaptchaResponse, DebugHelper.Type.Success);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n這裡有兩個變數值需注意。<br>首先是 WebsiteUrl 。這邊輸入「券商買賣證券日報表查詢系統（一般交易）」的網址，也就是 <a href=\"https://www.tpex.org.tw/web/stock/aftertrading/broker_trading/brokerBS.php?l=zh-tw\">https://www.tpex.org.tw/web/stock/aftertrading/broker_trading/brokerBS.php?l=zh-tw</a><br>然後是 WebsiteKey 。需要輸入的值是 6LcCoP8SAAAAAKzsvbTXymxqNWcC-dAhDYik0V3C 。可由 chrome F12 得到。<br><img src=\"/2021/03/14/202103/20210314-tpex_brokerBS/10.png\" alt=\"data-sitekey\"></li>\n<li>實際執行程式，可以看到 api 有確實取得驗證<br><img src=\"/2021/03/14/202103/20210314-tpex_brokerBS/11.png\" alt=\"perfome_api\"></li>\n</ol>\n<h3 id=\"完整程式\"><a href=\"#完整程式\" class=\"headerlink\" title=\"完整程式\"></a>完整程式</h3><p>如果需要下載指定清單中的全部股票資料，有下列事項需要特別注意</p>\n<ol>\n<li>兩檔股票間需要加上間隔，否則 ip 會被 ban。可參考使用 15 秒+一個隨機秒數。</li>\n<li>透過 api 取得的驗證，有可能在一段時間之後失效。此時需透過 api 重新取得一次驗證。</li>\n<li>即使重新取得驗證，直接再下載檔案還是有可能會出現錯誤訊息。<br><img src=\"/2021/03/14/202103/20210314-tpex_brokerBS/12.png\" alt=\"invalid\"></li>\n<li>目前測試結果，是參考手動操作步驟情境，在取得驗證之後先 POST <a href=\"https://www.tpex.org.tw/web/stock/aftertrading/broker_trading/brokerBS.php?l=zh-tw\">https://www.tpex.org.tw/web/stock/aftertrading/broker_trading/brokerBS.php?l=zh-tw</a> 一次，然後才是 POST <a href=\"https://www.tpex.org.tw/web/stock/aftertrading/broker_trading/download_ALLCSV.php\">https://www.tpex.org.tw/web/stock/aftertrading/broker_trading/download_ALLCSV.php</a> 下載 csv 檔案。</li>\n<li>實際透過程式批次下載成果 (有在驗證失效後，自動重新驗證並下載的版本)<br><img src=\"/2021/03/14/202103/20210314-tpex_brokerBS/13.png\" alt=\"final\"></li>\n</ol>\n","categories":["技術","html"],"tags":["html","web scraper"]},{"title":"C# 與 python 的參數傳遞","url":"/2021/03/16/202103/20210316-cs-python/","content":"<div class=\"note default\">\n            <p>C# 與 python 的參數傳遞</p>\n          </div>\n\n<a id=\"more\"></a>\n\n<h2 id=\"C-與-python-的參數傳遞\"><a href=\"#C-與-python-的參數傳遞\" class=\"headerlink\" title=\"C# 與 python 的參數傳遞\"></a>C# 與 python 的參數傳遞</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>假如目前有項需求，需要用 C# 處理，但是還另外有複雜的 DL 運算需要透過 python 去跑，如果程式都是在同一台機器上執行，目前自己找到的解決方式，就是用 C# 去執行 python.exe 同時接收運算結果，詳述如下。</p>\n<h3 id=\"python-端程式\"><a href=\"#python-端程式\" class=\"headerlink\" title=\"python 端程式\"></a>python 端程式</h3><p>模擬情境是 負責運算的 python 程式為 returnDemo.py 運算前會接到一個 ‘123’ 的參數</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">returnDemo</span>(<span class=\"params\">guid</span>):</span>    </span><br><span class=\"line\">    processed_guid = <span class=\"string\">&#x27;abc&#x27;</span> + guid</span><br><span class=\"line\">    print(processed_guid)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\">guid = sys.argv[<span class=\"number\">1</span>]</span><br><span class=\"line\">returnDemo(guid)</span><br></pre></td></tr></table></figure>\n\n<p>此時先用 cmd 測試 python程式可正常運作。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">C:\\<span class=\"title\">ProgramData</span>\\<span class=\"title\">Anaconda3</span>\\<span class=\"title\">python.exe</span> <span class=\"title\">R</span>:\\<span class=\"title\">returnDemo.py</span> &#x27;123&#x27;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/2021/03/16/202103/20210316-cs-python/returnDemopy.png\" alt=\"returnDemopy\"></p>\n<h3 id=\"C-端程式\"><a href=\"#C-端程式\" class=\"headerlink\" title=\"C# 端程式\"></a>C# 端程式</h3><p>這邊是找到網路上的文章 <a href=\"https://betterprogramming.pub/running-python-script-from-c-and-working-with-the-results-843e68d230e5\">Running Python Script From C# and Working With the Results</a> 做為參考並加以改寫。<br>改寫後的程式如下，主程式會有三個參數</p>\n<ol>\n<li>欲執行 py 的 python 程式路徑</li>\n<li>欲執行的 py 路徑</li>\n<li>py 程式執行時所需要的參數 (本例是 ‘123’ )<figure class=\"highlight cs\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">string</span> <span class=\"title\">run_cmd</span>(<span class=\"params\"><span class=\"keyword\">string</span> python, <span class=\"keyword\">string</span> cmd, <span class=\"keyword\">string</span> args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ProcessStartInfo start = <span class=\"keyword\">new</span> ProcessStartInfo();</span><br><span class=\"line\">    start.FileName = python;</span><br><span class=\"line\">    start.Arguments = <span class=\"keyword\">string</span>.Format(<span class=\"string\">&quot;\\&quot;&#123;0&#125;\\&quot; \\&quot;&#123;1&#125;\\&quot;&quot;</span>, cmd, args);</span><br><span class=\"line\">    start.UseShellExecute = <span class=\"literal\">false</span>;<span class=\"comment\">// Do not use OS shell</span></span><br><span class=\"line\">    start.CreateNoWindow = <span class=\"literal\">true</span>; <span class=\"comment\">// We don&#x27;t need new window</span></span><br><span class=\"line\">    start.RedirectStandardOutput = <span class=\"literal\">true</span>;<span class=\"comment\">// Any output, generated by application will be redirected back</span></span><br><span class=\"line\">    start.RedirectStandardError = <span class=\"literal\">true</span>; <span class=\"comment\">// Any error in standard output will be redirected back (for example exceptions)</span></span><br><span class=\"line\">    <span class=\"keyword\">using</span> (Process process = Process.Start(start))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">using</span> (StreamReader reader = process.StandardOutput)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">string</span> stderr = process.StandardError.ReadToEnd(); <span class=\"comment\">// Here are the exceptions from our Python script</span></span><br><span class=\"line\">            <span class=\"keyword\">string</span> result = reader.ReadToEnd(); <span class=\"comment\">// Here is the result of StdOut(for example: print &quot;test&quot;)</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">string</span> s = run_cmd(<span class=\"string\">@&quot;C:\\ProgramData\\Anaconda3\\python.exe&quot;</span>, <span class=\"string\">@&quot;R:\\returnDemo.py&quot;</span>, <span class=\"string\">&quot;&#x27;123&#x27;&quot;</span>);</span><br><span class=\"line\">    Console.WriteLine(s);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"/2021/03/16/202103/20210316-cs-python/cs.png\" alt=\"cs\"></li>\n</ol>\n<p>透過這樣的方法，一般的需求就可用 C# 處理，複雜的 DL 運算可交由 python 負責，可處理 keras 深度學習等高階元件運算。</p>\n","categories":["技術","python","c#"],"tags":["python","c#"]},{"title":"數位貨幣-交易所測試 (2)","url":"/2021/04/07/202104/20210407-DigiCur2/","content":"<div class=\"note default\">\n            <p>數位貨幣-交易所測試 (2)</p>\n          </div>\n\n<a id=\"more\"></a>\n\n<h2 id=\"林之晨的洞見\"><a href=\"#林之晨的洞見\" class=\"headerlink\" title=\"林之晨的洞見\"></a>林之晨的洞見</h2><p>聽了號稱「地表眼光最強的男人」上節目發表的一些看法，再度燃起了定投 FLOW 的動力，因此有了此文章。先使用一些奈米級的金額來測試一下，在各交易所之間轉帳、買賣等等，各需要花費多少費用、時間，還有其他值得注意的東西，記錄下來做為日後參考。<br><a href=\"https://podcasts.apple.com/tw/podcast/ep78-go-with-the-flow-%E5%A6%82%E4%BD%95%E7%9C%8B%E8%A6%8B-flow-%E5%9C%B0%E8%A1%A8%E7%9C%BC%E5%85%89%E6%9C%80%E5%BC%B7%E7%9A%84%E7%94%B7%E4%BA%BA-mr-jamie/id1484923390?i=1000516056902\">EP78 | Go with the FLOW，如何看見 Flow ？【地表眼光最強的男人】 Mr.Jami‪e‬</a></p>\n<h2 id=\"實際測試\"><a href=\"#實際測試\" class=\"headerlink\" title=\"實際測試\"></a>實際測試</h2><h3 id=\"步驟一、從-MAX-交易所申請提領-轉出-USDT\"><a href=\"#步驟一、從-MAX-交易所申請提領-轉出-USDT\" class=\"headerlink\" title=\"步驟一、從 MAX 交易所申請提領/轉出 USDT\"></a>步驟一、從 MAX 交易所申請提領/轉出 USDT</h3><p>從 MAX 交易所先轉一小筆金額 888.9988 USDT 到 Kraken 的 USDT 地址，可以看到手續費用是 21.35 MAX 幣 ( 約合新台幣 358 )。<br><img src=\"/2021/04/07/202104/20210407-DigiCur2/COIN_1.png\" alt=\"withdraw\"></p>\n<h3 id=\"步驟二、從-Kraken-交易所確認收到-USDT\"><a href=\"#步驟二、從-Kraken-交易所確認收到-USDT\" class=\"headerlink\" title=\"步驟二、從 Kraken 交易所確認收到 USDT\"></a>步驟二、從 Kraken 交易所確認收到 USDT</h3><p>Kraken 這邊大概在4分鐘後可以看到一筆資金交易記錄，當時狀態還是確認中。大約過了32分鐘之後確認完畢，此時才能實際進行交易。<br><img src=\"/2021/04/07/202104/20210407-DigiCur2/COIN_2.png\" alt=\"dep\"></p>\n<h3 id=\"步驟三、在-Kraken-交易所購買-Flow\"><a href=\"#步驟三、在-Kraken-交易所購買-Flow\" class=\"headerlink\" title=\"步驟三、在 Kraken 交易所購買 Flow\"></a>步驟三、在 Kraken 交易所購買 Flow</h3><ul>\n<li><p>Kraken 這邊提供的 Flow 交易對是 FLOW/USD ，這點是比較不方便的地方，不能直接用 USDT 購入 FLOW。<br><img src=\"/2021/04/07/202104/20210407-DigiCur2/COIN_3.png\" alt=\"USDT\"></p>\n</li>\n<li><p>這邊可以看到，將 USDT 換成 USD 還要再耗掉一點金額，並非真正的一比一兌換。<br><img src=\"/2021/04/07/202104/20210407-DigiCur2/COIN_4.png\" alt=\"USD\"></p>\n</li>\n<li><p>接下來實際購買人生中的第一顆 Flow 幣，成本 $33.619。<br><img src=\"/2021/04/07/202104/20210407-DigiCur2/COIN_5.png\" alt=\"Flow\"></p>\n</li>\n</ul>\n<h3 id=\"Flow-的質押\"><a href=\"#Flow-的質押\" class=\"headerlink\" title=\"Flow 的質押\"></a>Flow 的質押</h3><p>由於購買 Flow 是打算定期每天買入的投資，本來就打算長期持有，此時又意外發現這裡有提供質押的功能，所以馬上就進行質押了，可以再額外多些小小收入。<br><img src=\"/2021/04/07/202104/20210407-DigiCur2/COIN_6.png\" alt=\"Staking\"></p>\n<h2 id=\"心得感想\"><a href=\"#心得感想\" class=\"headerlink\" title=\"心得感想\"></a>心得感想</h2><p>從台幣入金 MAX ，然後買入 USDT 再轉到 Kraken 期間所花費的時間在一小時內，如果是小金額，手續費用佔比算是偏高的，以後可能會另外再累積到一定的金額再一次轉帳可能會比較划算。這是主要是實驗性質，所以金額方面沒有大筆投入。接下來大概就嚴格執行每天買入一顆 Flow 然後馬上質押，實驗大概一個月看看成效如何。</p>\n<p>這段時間惡補加密貨幣的各項知識，又另外找到了一些類似 Staking USDT 的服務商，號稱穩定收入，也實際投了一小部份金額，未來再看看成效。</p>\n","categories":["fintech"],"tags":["digital currency"]},{"title":"證交所買賣交易日報驗證碼 開源專案研究與後續處理自動下載","url":"/2021/03/16/202103/20210316-twse-bshtm/","content":"<div class=\"note default\">\n            <p>證交所買賣交易日報驗證碼 開源專案研究與後續處理自動下載</p>\n          </div>\n\n<a id=\"more\"></a>\n\n<h2 id=\"證交所買賣交易日報驗證碼-開源專案研究與後續處理自動下載\"><a href=\"#證交所買賣交易日報驗證碼-開源專案研究與後續處理自動下載\" class=\"headerlink\" title=\"證交所買賣交易日報驗證碼 開源專案研究與後續處理自動下載\"></a>證交所買賣交易日報驗證碼 開源專案研究與後續處理自動下載</h2><h3 id=\"開源專案\"><a href=\"#開源專案\" class=\"headerlink\" title=\"開源專案\"></a>開源專案</h3><ul>\n<li>證交所的<a href=\"https://bsr.twse.com.tw/bshtm/\">買賣日報表查詢系統</a>提供最近一日的上市買賣日報，下載時需要先輸入驗證碼。這種驗證碼有很多種破解方式，今天介紹的是 github 上的一個開源專案 <a href=\"https://github.com/maxmilian/twse_bshtm_captcha\">證交所買賣交易日報驗證碼</a>，很容易上手，效果也不錯。</li>\n</ul>\n<h3 id=\"開源專案的後續加工\"><a href=\"#開源專案的後續加工\" class=\"headerlink\" title=\"開源專案的後續加工\"></a>開源專案的後續加工</h3><ol>\n<li>由於專案內的說明已經很詳盡了，有興趣使用者，可自行下載專案研讀文件及程式。這裡再補充一下自己後續的處理，以及串接自動化下載的步驟。</li>\n<li>首先，針對所有已標記過的檔案，做一次圖片的預處理。由於總共標記了15,000個圖片檔，所以程式的迴圈數可以修改一下。<br><img src=\"/2021/03/16/202103/20210316-twse-bshtm/cnn01.png\" alt=\"preprocess\"> </li>\n<li>再來實際跑模型，並附上一些實際執行期間的訊息。這邊的程式，每跑一個 epoch 會存一個模型檔。需要花費的時間應該跟硬體規格有關。我自己的環境跑一個 epoch 需要三分鐘左右。<br><img src=\"/2021/03/16/202103/20210316-twse-bshtm/cnn02.png\" alt=\"model1\"><br><img src=\"/2021/03/16/202103/20210316-twse-bshtm/cnn03.png\" alt=\"model2\"><figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">2021-03-16 19:46:04.754543: I tensorflow/core/profiler/rpc/client/save_profile.cc:176] Creating directory: logs/train/plugins/profile/2021_03_16_19_46_04</span><br><span class=\"line\">2021-03-16 19:46:04.758101: I tensorflow/core/profiler/rpc/client/save_profile.cc:182] Dumped gzipped tool data for trace.json.gz to logs/train/plugins/profile/2021_03_16_19_46_04/localhost.localdomain.trace.json.gz</span><br><span class=\"line\">2021-03-16 19:46:04.761178: I tensorflow/core/profiler/rpc/client/save_profile.cc:176] Creating directory: logs/train/plugins/profile/2021_03_16_19_46_04</span><br><span class=\"line\">2021-03-16 19:46:04.761298: I tensorflow/core/profiler/rpc/client/save_profile.cc:182] Dumped gzipped tool data for memory_profile.json.gz to logs/train/plugins/profile/2021_03_16_19_46_04/localhost.localdomain.memory_profile.json.gz</span><br><span class=\"line\">2021-03-16 19:46:04.761559: I tensorflow/python/profiler/internal/profiler_wrapper.cc:111] Creating directory: logs/train/plugins/profile/2021_03_16_19_46_04Dumped tool data for xplane.pb to logs/train/plugins/profile/2021_03_16_19_46_04/localhost.localdomain.xplane.pb</span><br><span class=\"line\">Dumped tool data for overview_page.pb to logs/train/plugins/profile/2021_03_16_19_46_04/localhost.localdomain.overview_page.pb</span><br><span class=\"line\">Dumped tool data for input_pipeline.pb to logs/train/plugins/profile/2021_03_16_19_46_04/localhost.localdomain.input_pipeline.pb</span><br><span class=\"line\">Dumped tool data for tensorflow_stats.pb to logs/train/plugins/profile/2021_03_16_19_46_04/localhost.localdomain.tensorflow_stats.pb</span><br><span class=\"line\">Dumped tool data for kernel_stats.pb to logs/train/plugins/profile/2021_03_16_19_46_04/localhost.localdomain.kernel_stats.pb</span><br><span class=\"line\"></span><br><span class=\"line\">160/160 [==============================] - ETA: 0s - loss: 0.0747 - digit1_loss: 0.0163 - digit2_loss: 0.0129 - digit3_loss: 0.0158 - digit4_loss: 0.0131 - digit5_loss: 0.0166 - digit1_accuracy: 0.9944 - digit2_accuracy: 0.9954 - digit3_accuracy: 0.9950 - digit4_accuracy: 0.9954 - digit5_accuracy: 0.9944</span><br><span class=\"line\">Epoch 00001: saving model to model/01-0.07-0.28.hdf5</span><br><span class=\"line\">160/160 [==============================] - 159s 995ms/step - loss: 0.0747 - digit1_loss: 0.0163 - digit2_loss: 0.0129 - digit3_loss: 0.0158 - digit4_loss: 0.0131 - digit5_loss: 0.0166 - digit1_accuracy: 0.9944 - digit2_accuracy: 0.9954 - digit3_accuracy: 0.9950 - digit4_accuracy: 0.9954 - digit5_accuracy: 0.9944 - val_loss: 0.2760 - val_digit1_loss: 0.0445 - val_digit2_loss: 0.0558 - val_digit3_loss: 0.0707 - val_digit4_loss: 0.0520 - val_digit5_loss: 0.0530 - val_digit1_accuracy: 0.9985 - val_digit2_accuracy: 0.9975 - val_digit3_accuracy: 0.9965 - val_digit4_accuracy: 0.9985 - val_digit5_accuracy: 0.9985</span><br><span class=\"line\">Epoch 2/30</span><br><span class=\"line\"> 52/160 [========&gt;.....................] - ETA: 1:44 - loss: 0.0788 - digit1_loss: 0.0095 - digit2_loss: 0.0142 - digit3_loss: 0.0153 - digit4_loss: 0.0164 - digit5_loss: 0.0235 - digit1_accuracy: 0.9954 - digit2_accuracy: 0.9958 - digit3_accuracy: 0.9965 - digit4_accuracy: 0.9962 - digit5_accuracy: 0.9927</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>使用模型預測，這邊由於專案中沒有說明，加上自己還是初學 DL ，摸索了很久，這邊將心得註記下來，如註解的部份。<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">TakeGuess</span>(<span class=\"params\">filename</span>):</span></span><br><span class=\"line\">   print(<span class=\"string\">&#x27;model loading...&#x27;</span>)</span><br><span class=\"line\">   model = load_model(<span class=\"string\">&quot;model/01-0.07-0.28.hdf5&quot;</span>) <span class=\"comment\">#載入模型</span></span><br><span class=\"line\">   print(<span class=\"string\">&#x27;loading completed&#x27;</span>)</span><br><span class=\"line\">   </span><br><span class=\"line\">   from_filename = CAPTCHA_FOLDER + filename</span><br><span class=\"line\">   to_filename = PROCESSED_FOLDER + filename</span><br><span class=\"line\">   </span><br><span class=\"line\">   preprocessing(from_filename, to_filename) <span class=\"comment\">#將要辨識的圖片做一次預處理</span></span><br><span class=\"line\"></span><br><span class=\"line\">   img = cv2.imread(to_filename)</span><br><span class=\"line\">   npary = np.array(img)/<span class=\"number\">255.0</span></span><br><span class=\"line\">   npary = npary.reshape(<span class=\"number\">-1</span>, <span class=\"number\">40</span>, <span class=\"number\">190</span>, <span class=\"number\">3</span>) <span class=\"comment\">#將預處理過的圖片轉成模型可接受的形式</span></span><br><span class=\"line\">   x = model.predict(npary) <span class=\"comment\">#預測結果</span></span><br><span class=\"line\">   result = one_hot_decoding(x, allowedChars) <span class=\"comment\">#使用 one_hot_decoding 將預測結果轉成字串</span></span><br><span class=\"line\">   <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"下載證交所買賣交易日報的程式\"><a href=\"#下載證交所買賣交易日報的程式\" class=\"headerlink\" title=\"下載證交所買賣交易日報的程式\"></a>下載證交所買賣交易日報的程式</h3><ul>\n<li><p>下載資料的部份，網路上也有分享品質很好的程式: <a href=\"https://gist.github.com/CMingTseng/79447ccb2bb41e4bd8ec36d020fccab9\">分點進出取資料研究</a>。程式下載回來後，將手動輸入驗證碼的部份改成呼叫上述辨識的程式即可完成自動化的版本。</p>\n</li>\n<li><p>原始版本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">&#x27;輸入圖型驗證碼: &#x27;</span>, end=<span class=\"string\">&#x27;&#x27;</span>, flush=<span class=\"literal\">True</span>)</span><br><span class=\"line\">vcode = sys.stdin.readline().strip()</span><br><span class=\"line\">params[<span class=\"string\">&#x27;CaptchaControl1&#x27;</span>] = vcode</span><br><span class=\"line\">params[<span class=\"string\">&#x27;TextBox_Stkno&#x27;</span>] = <span class=\"string\">&#x27;2330&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>自動辨識版</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># print(&#x27;輸入圖型驗證碼: &#x27;, end=&#x27;&#x27;, flush=True)</span></span><br><span class=\"line\"><span class=\"comment\"># vcode = sys.stdin.readline().strip()</span></span><br><span class=\"line\">vcode = TakeGuess(imgpath)</span><br><span class=\"line\">params[<span class=\"string\">&#x27;CaptchaControl1&#x27;</span>] = vcode</span><br><span class=\"line\">params[<span class=\"string\">&#x27;TextBox_Stkno&#x27;</span>] = <span class=\"string\">&#x27;2330&#x27;</span> </span><br></pre></td></tr></table></figure>\n</li>\n<li><p>實際下載測試成果，截圖如下。個人體感，辨識率大概在八成左右(每下載五次大概會失敗一次)，後續還有改良空間。<br><img src=\"/2021/03/16/202103/20210316-twse-bshtm/cnn04.png\" alt=\"download\"></p>\n</li>\n</ul>\n","categories":["技術","python"],"tags":["html","web scraper","python","tensorflow","keras"]},{"title":"DeepLearning.AI TensorFlow Developer 筆記","url":"/2021/04/14/202104/tensorflow-in-practice/","content":"<div class=\"note default\">\n            <p>TensorFlow Developer 筆記</p>\n          </div>\n\n<a id=\"more\"></a>\n\n<h2 id=\"DeepLearning-AI-TensorFlow-Developer-专业证书-總課程連結\"><a href=\"#DeepLearning-AI-TensorFlow-Developer-专业证书-總課程連結\" class=\"headerlink\" title=\"DeepLearning.AI TensorFlow Developer 专业证书 (總課程連結)\"></a><a href=\"https://www.coursera.org/professional-certificates/tensorflow-in-practice\">DeepLearning.AI TensorFlow Developer 专业证书 (總課程連結)</a></h2><h3 id=\"Introduction-to-TensorFlow-for-Artificial-Intelligence-Machine-Learning-and-Deep-Learning\"><a href=\"#Introduction-to-TensorFlow-for-Artificial-Intelligence-Machine-Learning-and-Deep-Learning\" class=\"headerlink\" title=\"Introduction to TensorFlow for Artificial Intelligence, Machine Learning, and Deep Learning\"></a><a href=\"https://www.coursera.org/learn/introduction-tensorflow?specialization=tensorflow-in-practice\">Introduction to TensorFlow for Artificial Intelligence, Machine Learning, and Deep Learning</a></h3><h3 id=\"Convolutional-Neural-Networks-in-TensorFlow\"><a href=\"#Convolutional-Neural-Networks-in-TensorFlow\" class=\"headerlink\" title=\"Convolutional Neural Networks in TensorFlow\"></a><a href=\"https://www.coursera.org/learn/convolutional-neural-networks-tensorflow?specialization=tensorflow-in-practice\">Convolutional Neural Networks in TensorFlow</a></h3><h3 id=\"Natural-Language-Processing-in-TensorFlow\"><a href=\"#Natural-Language-Processing-in-TensorFlow\" class=\"headerlink\" title=\"Natural Language Processing in TensorFlow\"></a><a href=\"https://www.coursera.org/learn/natural-language-processing-tensorflow?specialization=tensorflow-in-practice\">Natural Language Processing in TensorFlow</a></h3><h3 id=\"Sequences-Time-Series-and-Prediction\"><a href=\"#Sequences-Time-Series-and-Prediction\" class=\"headerlink\" title=\"Sequences, Time Series and Prediction\"></a><a href=\"https://www.coursera.org/learn/tensorflow-sequences-time-series-and-prediction?specialization=tensorflow-in-practice\">Sequences, Time Series and Prediction</a></h3><h2 id=\"Introduction-to-TensorFlow-for-Artificial-Intelligence-Machine-Learning-and-Deep-Learning-1\"><a href=\"#Introduction-to-TensorFlow-for-Artificial-Intelligence-Machine-Learning-and-Deep-Learning-1\" class=\"headerlink\" title=\"Introduction to TensorFlow for Artificial Intelligence, Machine Learning, and Deep Learning\"></a>Introduction to TensorFlow for Artificial Intelligence, Machine Learning, and Deep Learning</h2><h3 id=\"Week-1-A-New-Programming-Paradigm\"><a href=\"#Week-1-A-New-Programming-Paradigm\" class=\"headerlink\" title=\"Week 1 A New Programming Paradigm\"></a><a href=\"https://www.coursera.org/learn/introduction-tensorflow/home/week/1\">Week 1 A New Programming Paradigm</a></h3><h4 id=\"Before-you-begin-TensorFlow-2-0-and-this-course\"><a href=\"#Before-you-begin-TensorFlow-2-0-and-this-course\" class=\"headerlink\" title=\"Before you begin: TensorFlow 2.0 and this course\"></a>Before you begin: TensorFlow 2.0 and this course</h4><h4 id=\"Introduction-A-conversation-with-Andrew-Ng\"><a href=\"#Introduction-A-conversation-with-Andrew-Ng\" class=\"headerlink\" title=\"Introduction: A conversation with Andrew Ng\"></a>Introduction: A conversation with Andrew Ng</h4><h4 id=\"A-primer-in-machine-learning\"><a href=\"#A-primer-in-machine-learning\" class=\"headerlink\" title=\"A primer in machine learning\"></a>A primer in machine learning</h4><p><img src=\"/2021/04/14/202104/tensorflow-in-practice/NewParadigm.png\" alt=\"NewParadigm\"></p>\n<h4 id=\"The-‘Hello-World’-of-neural-networks\"><a href=\"#The-‘Hello-World’-of-neural-networks\" class=\"headerlink\" title=\"The ‘Hello World’ of neural networks\"></a>The ‘Hello World’ of neural networks</h4><figure class=\"highlight py\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow <span class=\"keyword\">import</span> keras</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\">model = tf.keras.Sequential([keras.layers.Dense(units=<span class=\"number\">1</span>, input_shape=[<span class=\"number\">1</span>])])</span><br><span class=\"line\"></span><br><span class=\"line\">model.compile(optimizer=<span class=\"string\">&#x27;sgd&#x27;</span>, loss=<span class=\"string\">&#x27;mean_squared_error&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">xs = np.array([<span class=\"number\">-1.0</span>,  <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>, <span class=\"number\">4.0</span>], dtype=float)</span><br><span class=\"line\">ys = np.array([<span class=\"number\">-3.0</span>, <span class=\"number\">-1.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">3.0</span>, <span class=\"number\">5.0</span>, <span class=\"number\">7.0</span>], dtype=float)</span><br><span class=\"line\"></span><br><span class=\"line\">model.fit(xs, ys, epochs=<span class=\"number\">500</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(model.predict([<span class=\"number\">10.0</span>]))</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"From-rules-to-data\"><a href=\"#From-rules-to-data\" class=\"headerlink\" title=\"From rules to data\"></a><a href=\"https://www.coursera.org/learn/introduction-tensorflow/supplement/GnK4N/from-rules-to-data\">From rules to data</a></h4><h4 id=\"Working-through-‘Hello-World’-in-TensorFlow-and-Python\"><a href=\"#Working-through-‘Hello-World’-in-TensorFlow-and-Python\" class=\"headerlink\" title=\"Working through ‘Hello World’ in TensorFlow and Python\"></a>Working through ‘Hello World’ in TensorFlow and Python</h4><p><a href=\"https://www.youtube.com/watch?v=inN8seMm7UI\"><img src=\"https://img.youtube.com/vi/inN8seMm7UI/0.jpg\" alt=\"Get started with Google Colaboratory (Coding TensorFlow)\"></a></p>\n<h4 id=\"Try-it-for-yourself\"><a href=\"#Try-it-for-yourself\" class=\"headerlink\" title=\"Try it for yourself\"></a>Try it for yourself</h4><p><a href=\"https://github.com/lmoroney/dlaicourse/blob/master/Course%201%20-%20Part%202%20-%20Lesson%202%20-%20Notebook.ipynb\">GitHub Course 1 - Part 2 - Lesson 2 - Notebook.ipynb</a><br><a href=\"https://colab.research.google.com/github/lmoroney/dlaicourse/blob/master/Course%201%20-%20Part%202%20-%20Lesson%202%20-%20Notebook.ipynb\">Colab Course 1 - Part 2 - Lesson 2 - Notebook.ipynb</a></p>\n<h4 id=\"Week-1-Quiz-升級後提交\"><a href=\"#Week-1-Quiz-升級後提交\" class=\"headerlink\" title=\"Week 1 Quiz (升級後提交)\"></a>Week 1 Quiz (升級後提交)</h4><h3 id=\"Weekly-Exercise-Your-First-Neural-Network\"><a href=\"#Weekly-Exercise-Your-First-Neural-Network\" class=\"headerlink\" title=\"Weekly Exercise - Your First Neural Network\"></a>Weekly Exercise - Your First Neural Network</h3><h4 id=\"Introduction-to-Google-Colaboratory\"><a href=\"#Introduction-to-Google-Colaboratory\" class=\"headerlink\" title=\"Introduction to Google Colaboratory\"></a>Introduction to Google Colaboratory</h4><p><a href=\"https://research.google.com/colaboratory/faq.html\">Frequently Asked Questions</a></p>\n<h4 id=\"Get-started-with-Google-Colaboratory-Coding-TensorFlow-YouTube\"><a href=\"#Get-started-with-Google-Colaboratory-Coding-TensorFlow-YouTube\" class=\"headerlink\" title=\"Get started with Google Colaboratory (Coding TensorFlow) - YouTube\"></a>Get started with Google Colaboratory (Coding TensorFlow) - YouTube</h4><h4 id=\"Exercise-1-Housing-Prices-升級後提交\"><a href=\"#Exercise-1-Housing-Prices-升級後提交\" class=\"headerlink\" title=\"Exercise 1 (Housing Prices)  (升級後提交)\"></a>Exercise 1 (Housing Prices)  (升級後提交)</h4><h4 id=\"编程作业-Exercise-1-Housing-Prices-升級後提交\"><a href=\"#编程作业-Exercise-1-Housing-Prices-升級後提交\" class=\"headerlink\" title=\"编程作业: Exercise 1 (Housing Prices)  (升級後提交)\"></a>编程作业: Exercise 1 (Housing Prices)  (升級後提交)</h4><h4 id=\"Week-1-Resources\"><a href=\"#Week-1-Resources\" class=\"headerlink\" title=\"Week 1 Resources\"></a><a href=\"https://www.coursera.org/learn/introduction-tensorflow/supplement/6tZWF/week-1-resources\">Week 1 Resources</a></h4><h3 id=\"Optional-Ungraded-Google-Colaboratory-environment\"><a href=\"#Optional-Ungraded-Google-Colaboratory-environment\" class=\"headerlink\" title=\"Optional: Ungraded Google Colaboratory environment\"></a>Optional: Ungraded Google Colaboratory environment</h3><h4 id=\"Exercise-1-Housing-Prices\"><a href=\"#Exercise-1-Housing-Prices\" class=\"headerlink\" title=\"Exercise 1 (Housing Prices)\"></a><a href=\"https://www.coursera.org/learn/introduction-tensorflow/ungradedLti/fF5cn/exercise-1-housing-prices\">Exercise 1 (Housing Prices)</a></h4><p><a href=\"https://colab.research.google.com/github/lmoroney/dlaicourse/blob/master/Exercises/Exercise%201%20-%20House%20Prices/Exercise_1_House_Prices_Question.ipynb\">Colab Exercise_1_House_Prices_Question.ipynb</a></p>\n<h3 id=\"Week-2-Introduction-to-Computer-Vision\"><a href=\"#Week-2-Introduction-to-Computer-Vision\" class=\"headerlink\" title=\"Week 2 Introduction to Computer Vision\"></a><a href=\"https://www.coursera.org/learn/introduction-tensorflow/home/week/2\">Week 2 Introduction to Computer Vision</a></h3><h4 id=\"A-Conversation-with-Andrew-Ng\"><a href=\"#A-Conversation-with-Andrew-Ng\" class=\"headerlink\" title=\"A Conversation with Andrew Ng\"></a>A Conversation with Andrew Ng</h4><h4 id=\"An-Introduction-to-computer-vision\"><a href=\"#An-Introduction-to-computer-vision\" class=\"headerlink\" title=\"An Introduction to computer vision\"></a>An Introduction to computer vision</h4><h4 id=\"Exploring-how-to-use-data\"><a href=\"#Exploring-how-to-use-data\" class=\"headerlink\" title=\"Exploring how to use data\"></a>Exploring how to use data</h4><p><a href=\"https://github.com/zalandoresearch/fashion-mnist\">GitHub Fashion-MNIST</a></p>\n<h4 id=\"Writing-code-to-load-training-data\"><a href=\"#Writing-code-to-load-training-data\" class=\"headerlink\" title=\"Writing code to load training data\"></a>Writing code to load training data</h4><h4 id=\"The-structure-of-Fashion-MNIST-data\"><a href=\"#The-structure-of-Fashion-MNIST-data\" class=\"headerlink\" title=\"The structure of Fashion MNIST data\"></a>The structure of Fashion MNIST data</h4><p><a href=\"https://ai.google/responsibilities/responsible-ai-practices/\">Responsible AI practices</a></p>\n<h4 id=\"Coding-a-Computer-Vision-Neural-Network\"><a href=\"#Coding-a-Computer-Vision-Neural-Network\" class=\"headerlink\" title=\"Coding a Computer Vision Neural Network\"></a>Coding a Computer Vision Neural Network</h4><p><img src=\"/2021/04/14/202104/tensorflow-in-practice/FlattenLayerShaping.png\" alt=\"Flatten Layer Shaping\"><br><a href=\"https://www.youtube.com/watch?v=fXOsFF95ifk\"><img src=\"https://img.youtube.com/vi/fXOsFF95ifk/0.jpg\" alt=\"Neural Network Overview (C1W3L01)\"></a></p>\n<h4 id=\"See-how-it’s-done\"><a href=\"#See-how-it’s-done\" class=\"headerlink\" title=\"See how it’s done\"></a>See how it’s done</h4><h4 id=\"Walk-through-a-Notebook-for-computer-vision\"><a href=\"#Walk-through-a-Notebook-for-computer-vision\" class=\"headerlink\" title=\"Walk through a Notebook for computer vision\"></a>Walk through a Notebook for computer vision</h4><h4 id=\"Get-hands-on-with-computer-vision\"><a href=\"#Get-hands-on-with-computer-vision\" class=\"headerlink\" title=\"Get hands-on with computer vision\"></a>Get hands-on with computer vision</h4><p><a href=\"https://colab.research.google.com/github/lmoroney/dlaicourse/blob/master/Course%201%20-%20Part%204%20-%20Lesson%202%20-%20Notebook.ipynb\">Colab Course 1 - Part 4 - Lesson 2 - Notebook.ipynb</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</span><br><span class=\"line\">print(tf.__version__)</span><br><span class=\"line\"></span><br><span class=\"line\">mnist = tf.keras.datasets.fashion_mnist</span><br><span class=\"line\"></span><br><span class=\"line\">(training_images, training_labels), (test_images, test_labels) = mnist.load_data()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">np.set_printoptions(linewidth=<span class=\"number\">200</span>)</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"comment\">#Display image as grayscale using matplotlib</span></span><br><span class=\"line\"><span class=\"comment\">#https://stackoverflow.com/questions/3823752/display-image-as-grayscale-using-matplotlib</span></span><br><span class=\"line\"><span class=\"comment\">#plt.imshow(training_images[0])</span></span><br><span class=\"line\">plt.imshow(training_images[<span class=\"number\">0</span>], cmap=<span class=\"string\">&#x27;gray&#x27;</span>, vmin=<span class=\"number\">0</span>, vmax=<span class=\"number\">255</span>)</span><br><span class=\"line\">print(training_labels[<span class=\"number\">0</span>])</span><br><span class=\"line\">print(training_images[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">training_images  = training_images / <span class=\"number\">255.0</span></span><br><span class=\"line\">test_images = test_images / <span class=\"number\">255.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">model = tf.keras.models.Sequential([tf.keras.layers.Flatten(), </span><br><span class=\"line\">                                    tf.keras.layers.Dense(<span class=\"number\">128</span>, activation=tf.nn.relu), </span><br><span class=\"line\">                                    tf.keras.layers.Dense(<span class=\"number\">10</span>, activation=tf.nn.softmax)])</span><br><span class=\"line\"></span><br><span class=\"line\">model.compile(optimizer = tf.optimizers.Adam(),</span><br><span class=\"line\">              loss = <span class=\"string\">&#x27;sparse_categorical_crossentropy&#x27;</span>,</span><br><span class=\"line\">              metrics=[<span class=\"string\">&#x27;accuracy&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">model.fit(training_images, training_labels, epochs=<span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">model.evaluate(test_images, test_labels)</span><br><span class=\"line\"></span><br><span class=\"line\">classifications = model.predict(test_images)</span><br><span class=\"line\"></span><br><span class=\"line\">print(classifications[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">print(test_labels[<span class=\"number\">0</span>])</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Using-Callbacks-to-control-training\"><a href=\"#Using-Callbacks-to-control-training\" class=\"headerlink\" title=\"Using Callbacks to control training\"></a>Using Callbacks to control training</h4><p><img src=\"/2021/04/14/202104/tensorflow-in-practice/OnEpochEnd.png\" alt=\"On Epoch End\"><br><img src=\"/2021/04/14/202104/tensorflow-in-practice/Callbacks.png\" alt=\"Callbacks\"></p>\n<h4 id=\"See-how-to-implement-Callbacks\"><a href=\"#See-how-to-implement-Callbacks\" class=\"headerlink\" title=\"See how to implement Callbacks\"></a>See how to implement Callbacks</h4><p><a href=\"https://colab.research.google.com/github/lmoroney/dlaicourse/blob/master/Course%201%20-%20Part%204%20-%20Lesson%204%20-%20Notebook.ipynb\">Colab Course 1 - Part 4 - Lesson 4 - Notebook.ipynb</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">myCallback</span>(<span class=\"params\">tf.keras.callbacks.Callback</span>):</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">on_epoch_end</span>(<span class=\"params\">self, epoch, logs=&#123;&#125;</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(logs.get(<span class=\"string\">&#x27;accuracy&#x27;</span>)&gt;<span class=\"number\">0.6</span>):</span><br><span class=\"line\">      print(<span class=\"string\">&quot;\\nReached 60% accuracy so cancelling training!&quot;</span>)</span><br><span class=\"line\">      self.model.stop_training = <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\">mnist = tf.keras.datasets.fashion_mnist</span><br><span class=\"line\"></span><br><span class=\"line\">(x_train, y_train),(x_test, y_test) = mnist.load_data()</span><br><span class=\"line\">x_train, x_test = x_train / <span class=\"number\">255.0</span>, x_test / <span class=\"number\">255.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">callbacks = myCallback()</span><br><span class=\"line\"></span><br><span class=\"line\">model = tf.keras.models.Sequential([</span><br><span class=\"line\">  tf.keras.layers.Flatten(input_shape=(<span class=\"number\">28</span>, <span class=\"number\">28</span>)),</span><br><span class=\"line\">  tf.keras.layers.Dense(<span class=\"number\">512</span>, activation=tf.nn.relu),</span><br><span class=\"line\">  tf.keras.layers.Dense(<span class=\"number\">10</span>, activation=tf.nn.softmax)</span><br><span class=\"line\">])</span><br><span class=\"line\">model.compile(optimizer=tf.optimizers.Adam(),</span><br><span class=\"line\">              loss=<span class=\"string\">&#x27;sparse_categorical_crossentropy&#x27;</span>,</span><br><span class=\"line\">              metrics=[<span class=\"string\">&#x27;accuracy&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">model.fit(x_train, y_train, epochs=<span class=\"number\">10</span>, callbacks=[callbacks])</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Walk-through-a-notebook-with-Callbacks\"><a href=\"#Walk-through-a-notebook-with-Callbacks\" class=\"headerlink\" title=\"Walk through a notebook with Callbacks\"></a>Walk through a notebook with Callbacks</h4><h4 id=\"Week-2-Quiz-升級後提交\"><a href=\"#Week-2-Quiz-升級後提交\" class=\"headerlink\" title=\"Week 2 Quiz (升級後提交)\"></a>Week 2 Quiz (升級後提交)</h4><h4 id=\"Exercise-2-Handwriting-Recognition-购买订阅以解锁此项目。\"><a href=\"#Exercise-2-Handwriting-Recognition-购买订阅以解锁此项目。\" class=\"headerlink\" title=\"Exercise 2 (Handwriting Recognition) (购买订阅以解锁此项目。)\"></a>Exercise 2 (Handwriting Recognition) (购买订阅以解锁此项目。)</h4><h4 id=\"编程作业-Exercise-2-升級後提交\"><a href=\"#编程作业-Exercise-2-升級後提交\" class=\"headerlink\" title=\"编程作业: Exercise 2 (升級後提交)\"></a>编程作业: Exercise 2 (升級後提交)</h4><h3 id=\"Weekly-Exercise-Implement-a-Deep-Neural-Network-to-recognize-handwritten-digits\"><a href=\"#Weekly-Exercise-Implement-a-Deep-Neural-Network-to-recognize-handwritten-digits\" class=\"headerlink\" title=\"Weekly Exercise - Implement a Deep Neural Network to recognize handwritten digits\"></a>Weekly Exercise - Implement a Deep Neural Network to recognize handwritten digits</h3><h4 id=\"Week-2-Resources\"><a href=\"#Week-2-Resources\" class=\"headerlink\" title=\"Week 2 Resources\"></a>Week 2 Resources</h4><p><a href=\"https://github.com/Dipeshpal/Machine-Learning-for-Vision-With-Tensorflow/blob/master/Beyond_Hello_World%2C_A_Computer_Vision_Example.ipynb\">Beyond Hello, World - A Computer Vision Example</a></p>\n<p><a href=\"https://github.com/lmoroney/dlaicourse/blob/master/Course%201%20-%20Part%204%20-%20Lesson%204%20-%20Notebook.ipynb\">Exploring Callbacks</a></p>\n<p><a href=\"https://github.com/lmoroney/dlaicourse/blob/master/Exercises/Exercise%202%20-%20Handwriting%20Recognition/Exercise2-Answer.ipynb\">Exercise 2 - Handwriting Recognition - Answer</a></p>\n<h3 id=\"Optional-Ungraded-Google-Colaboratory-environment-1\"><a href=\"#Optional-Ungraded-Google-Colaboratory-environment-1\" class=\"headerlink\" title=\"Optional: Ungraded Google Colaboratory environment\"></a>Optional: Ungraded Google Colaboratory environment</h3><h4 id=\"Exercise-2-Handwriting-Recognition\"><a href=\"#Exercise-2-Handwriting-Recognition\" class=\"headerlink\" title=\"Exercise 2 (Handwriting Recognition)\"></a><a href=\"https://www.coursera.org/learn/introduction-tensorflow/ungradedLti/N4HyV/exercise-2-handwriting-recognition\">Exercise 2 (Handwriting Recognition)</a></h4><p><a href=\"https://colab.research.google.com/github/lmoroney/dlaicourse/blob/master/Exercises/Exercise%202%20-%20Handwriting%20Recognition/Exercise2-Question.ipynb\">Colab Exercise2-Question.ipynb</a></p>\n<h3 id=\"Week-3-Enhancing-Vision-with-Convolutional-Neural-Networks\"><a href=\"#Week-3-Enhancing-Vision-with-Convolutional-Neural-Networks\" class=\"headerlink\" title=\"Week 3 Enhancing Vision with Convolutional Neural Networks\"></a><a href=\"https://www.coursera.org/learn/introduction-tensorflow/home/week/3\">Week 3 Enhancing Vision with Convolutional Neural Networks</a></h3><h4 id=\"A-conversation-with-Andrew-Ng\"><a href=\"#A-conversation-with-Andrew-Ng\" class=\"headerlink\" title=\"A conversation with Andrew Ng\"></a>A conversation with Andrew Ng</h4><h4 id=\"What-are-convolutions-and-pooling\"><a href=\"#What-are-convolutions-and-pooling\" class=\"headerlink\" title=\"What are convolutions and pooling?\"></a>What are convolutions and pooling?</h4><h4 id=\"Coding-convolutions-and-pooling-layers\"><a href=\"#Coding-convolutions-and-pooling-layers\" class=\"headerlink\" title=\"Coding convolutions and pooling layers\"></a>Coding convolutions and pooling layers</h4><p><a href=\"https://www.tensorflow.org/api_docs/python/tf/keras/layers/Conv2D\">tf.keras.layers.Conv2D</a><br><a href=\"https://www.tensorflow.org/api_docs/python/tf/keras/layers/MaxPool2D\">tf.keras.layers.MaxPool2D</a></p>\n<h4 id=\"Implementing-convolutional-layers\"><a href=\"#Implementing-convolutional-layers\" class=\"headerlink\" title=\"Implementing convolutional layers\"></a>Implementing convolutional layers</h4><p><img src=\"/2021/04/14/202104/tensorflow-in-practice/Implementing1.png\" alt=\"Implementing convolutional layers code\"></p>\n<ul>\n<li>64 個 3*3 的 filter<ul>\n<li>beyond the scope of this class</li>\n<li>they aren’t random. They start with a set of known good filters in a similar way to the pattern fitting that you saw earlier</li>\n</ul>\n</li>\n<li>relu 表示負值會被丟棄</li>\n<li>1 表示顏色為灰階</li>\n<li>For more details on convolutions and how they work, there’s a great set of resources here.<br><a href=\"https://www.youtube.com/playlist?list=PLkDaE6sCZn6Gl29AoE31iwdVwSG-KnDzF\"><img src=\"https://i.ytimg.com/vi/ArPaAX_PhIs/hqdefault.jpg\" alt=\"Convolutional Neural Networks\"></a></li>\n</ul>\n<h4 id=\"Learn-more-about-convolutions\"><a href=\"#Learn-more-about-convolutions\" class=\"headerlink\" title=\"Learn more about convolutions\"></a>Learn more about convolutions</h4><p><a href=\"https://bit.ly/2UGa7uH\">Convolutional Neural Networks playlist</a></p>\n<h4 id=\"Implementing-pooling-layers\"><a href=\"#Implementing-pooling-layers\" class=\"headerlink\" title=\"Implementing pooling layers\"></a>Implementing pooling layers</h4><p><img src=\"/2021/04/14/202104/tensorflow-in-practice/Implementing2.png\" alt=\"Implementing pooling layers code\"><br><img src=\"/2021/04/14/202104/tensorflow-in-practice/Implementing3.png\" alt=\"Implementing pooling layers code\"></p>\n<p>28-&gt;26<br>13-&gt;11<br><img src=\"/2021/04/14/202104/tensorflow-in-practice/Implementing4.png\" alt=\"Implementing pooling layers code\"><br><img src=\"/2021/04/14/202104/tensorflow-in-practice/Implementing5.png\" alt=\"Implementing pooling layers code\"></p>\n<h4 id=\"Getting-hands-on-your-first-ConvNet\"><a href=\"#Getting-hands-on-your-first-ConvNet\" class=\"headerlink\" title=\"Getting hands-on, your first ConvNet\"></a>Getting hands-on, your first ConvNet</h4><h4 id=\"Improving-the-Fashion-classifier-with-convolutions\"><a href=\"#Improving-the-Fashion-classifier-with-convolutions\" class=\"headerlink\" title=\"Improving the Fashion classifier with convolutions\"></a>Improving the Fashion classifier with convolutions</h4><h4 id=\"Try-it-for-yourself-1\"><a href=\"#Try-it-for-yourself-1\" class=\"headerlink\" title=\"Try it for yourself\"></a>Try it for yourself</h4><p><a href=\"https://colab.research.google.com/github/lmoroney/dlaicourse/blob/master/Course%201%20-%20Part%206%20-%20Lesson%202%20-%20Notebook.ipynb\">Colab Course 1 - Part 6 - Lesson 2 - Notebook.ipynb</a></p>\n<h4 id=\"Walking-through-convolutions\"><a href=\"#Walking-through-convolutions\" class=\"headerlink\" title=\"Walking through convolutions\"></a>Walking through convolutions</h4><h4 id=\"Experiment-with-filters-and-pools\"><a href=\"#Experiment-with-filters-and-pools\" class=\"headerlink\" title=\"Experiment with filters and pools\"></a>Experiment with filters and pools</h4><p><a href=\"https://colab.research.google.com/github/lmoroney/dlaicourse/blob/master/Course%201%20-%20Part%206%20-%20Lesson%203%20-%20Notebook.ipynb\">Colab Course 1 - Part 6 - Lesson 3 - Notebook.ipynb</a></p>\n<p><a href=\"https://lodev.org/cgtutor/filtering.html\">Lode’s Computer Graphics Tutorial Image Filtering</a></p>\n<h4 id=\"Week-3-Quiz-升級後提交\"><a href=\"#Week-3-Quiz-升級後提交\" class=\"headerlink\" title=\"Week 3 Quiz (升級後提交)\"></a>Week 3 Quiz (升級後提交)</h4><h3 id=\"Weekly-Exercise-Improving-DNN-Performance-using-Convolutions\"><a href=\"#Weekly-Exercise-Improving-DNN-Performance-using-Convolutions\" class=\"headerlink\" title=\"Weekly Exercise - Improving DNN Performance using Convolutions\"></a>Weekly Exercise - Improving DNN Performance using Convolutions</h3><h4 id=\"Exercise-3-Improve-MNIST-with-convolutions-购买订阅以解锁此项目。\"><a href=\"#Exercise-3-Improve-MNIST-with-convolutions-购买订阅以解锁此项目。\" class=\"headerlink\" title=\"Exercise 3 (Improve MNIST with convolutions) 购买订阅以解锁此项目。\"></a>Exercise 3 (Improve MNIST with convolutions) 购买订阅以解锁此项目。</h4><h4 id=\"编程作业-Exercise-3-Improve-MNIST-with-convolutions-升級後提交\"><a href=\"#编程作业-Exercise-3-Improve-MNIST-with-convolutions-升級後提交\" class=\"headerlink\" title=\"编程作业: Exercise 3 (Improve MNIST with convolutions)) (升級後提交)\"></a>编程作业: Exercise 3 (Improve MNIST with convolutions)) (升級後提交)</h4><h4 id=\"Week-3-Resources\"><a href=\"#Week-3-Resources\" class=\"headerlink\" title=\"Week 3 Resources\"></a>Week 3 Resources</h4><p><a href=\"https://github.com/lmoroney/dlaicourse/blob/master/Course%201%20-%20Part%206%20-%20Lesson%202%20-%20Notebook.ipynb\">Adding Convolutions to Fashion MNIST</a><br><a href=\"https://github.com/lmoroney/dlaicourse/blob/master/Course%201%20-%20Part%206%20-%20Lesson%203%20-%20Notebook.ipynb\">Exploring how Convolutions and Pooling work</a></p>\n<h3 id=\"Optional-Ungraded-Google-Colaboratory-environment-2\"><a href=\"#Optional-Ungraded-Google-Colaboratory-environment-2\" class=\"headerlink\" title=\"Optional: Ungraded Google Colaboratory environment\"></a>Optional: Ungraded Google Colaboratory environment</h3><h4 id=\"Exercise-3-Improve-MNIST-with-convolutions\"><a href=\"#Exercise-3-Improve-MNIST-with-convolutions\" class=\"headerlink\" title=\"Exercise 3 - Improve MNIST with convolutions\"></a>Exercise 3 - Improve MNIST with convolutions</h4><p><a href=\"https://colab.research.google.com/github/lmoroney/dlaicourse/blob/master/Exercises/Exercise%203%20-%20Convolutions/Exercise%203%20-%20Question.ipynb\">Exercise 3 - Question.ipynb</a></p>\n<p>(未完待續)</p>\n","categories":["技術","python"],"tags":["python","tensorflow","keras"]},{"title":"數位貨幣-交易所測試 (3)","url":"/2021/04/23/202104/20210423-DigiCur3/","content":"<div class=\"note default\">\n            <p>MAX API 自動化交易</p>\n          </div>\n\n<div class=\"note default\">\n            <p>其他雜記</p>\n          </div>\n\n<a id=\"more\"></a>\n\n<h2 id=\"MAX-API-自動化交易\"><a href=\"#MAX-API-自動化交易\" class=\"headerlink\" title=\"MAX API 自動化交易\"></a>MAX API 自動化交易</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>今天無意中發現 MAX API 的教學資料，實作起來也不困難，而且也在今天各主流幣大跌時趁亂賺了一小筆意外之財，所以在這邊記錄一下，供往後繼續深入研究。</p>\n<h3 id=\"參考資料-重要連結\"><a href=\"#參考資料-重要連結\" class=\"headerlink\" title=\"參考資料 ( 重要連結 )\"></a>參考資料 ( 重要連結 )</h3><p><a href=\"https://c9s.medium.com/%E9%97%9C%E6%96%BC-bbgo-q-a-16e05f9439c7\">關於 BBGO — Q &amp; A</a><br><a href=\"https://c9s.medium.com/bbgo-%E5%9C%A8%E5%AE%B6%E4%B9%9F%E5%8F%AF%E4%BB%A5%E8%B7%91%E7%B6%B2%E6%A0%BC%E7%AD%96%E7%95%A5%E7%A8%8B%E5%BC%8F-cdb59e171cf9\">BBGO — 在家也可以跑網格策略程式</a><br><a href=\"https://gist.github.com/c9s/a3e60415fe31db0a0f31749a37f843b7\">BBGO 之 MAX 交易所網格設定指南</a></p>\n<h3 id=\"實作過程\"><a href=\"#實作過程\" class=\"headerlink\" title=\"實作過程\"></a>實作過程</h3><h4 id=\"申請-MAX-交易所的-API-KEY\"><a href=\"#申請-MAX-交易所的-API-KEY\" class=\"headerlink\" title=\"申請 MAX 交易所的 API KEY\"></a>申請 MAX 交易所的 API KEY</h4><ol>\n<li><p>登入 MAX 網站後，由右上方的功能列表的帳號選單 ( 即自己的姓名 ) 點選後，再選「安全設定」-&gt;「 API 密鑰設定」<br><img src=\"/2021/04/23/202104/20210423-DigiCur3/API1.png\" alt=\"API\"></p>\n</li>\n<li><p>建立新密鑰後，需先找地方複製產出的密鑰。<br><img src=\"/2021/04/23/202104/20210423-DigiCur3/API2.png\" alt=\"API\"></p>\n</li>\n</ol>\n<h4 id=\"安裝-Go-環境\"><a href=\"#安裝-Go-環境\" class=\"headerlink\" title=\"安裝 Go 環境\"></a>安裝 Go 環境</h4><p>由於目前已有現成的 linux VM 環境，所以 OS 的部份不用另外費心。 而因為 BBGO 自動交易程式是用 Golang 寫成，所以要先到 <a href=\"https://golang.org/doc/install\">官網</a> 下載並安裝。</p>\n<ol>\n<li><p>切換至 Linux 頁籤並下載<br><img src=\"/2021/04/23/202104/20210423-DigiCur3/DownloadGoLinux.png\" alt=\"DownloadGo\"></p>\n</li>\n<li><p>解壓縮<br>參考上述官網指令，進行解壓縮。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">rm -rf /usr/<span class=\"built_in\">local</span>/go &amp;&amp; tar -C /usr/<span class=\"built_in\">local</span> -xzf go1.16.3.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>\n<ul>\n<li>需先建立 /usr/local/go 資料夾</li>\n<li>特殊的資料夾需有 root 權限，否則無法順利解壓縮</li>\n<li>目前對 linux 權限管理不熟，先用一個可能不算好的解法，可暫時解決無權限可解壓縮的問題，但正確性及安全性仍待確認。 參考連結: <a href=\"https://www.huaweicloud.com/articles/541961f446a3e2a1933bb5cc561ac256.html\">文件夹权限问题</a><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo chown -R $(whoami) /usr/<span class=\"built_in\">local</span>/</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>設定環境變數</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:/usr/<span class=\"built_in\">local</span>/go/bin</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<h4 id=\"安裝並設定-BBGO-程式\"><a href=\"#安裝並設定-BBGO-程式\" class=\"headerlink\" title=\"安裝並設定 BBGO 程式\"></a>安裝並設定 BBGO 程式</h4><ol>\n<li><p>參考 <a href=\"https://c9s.medium.com/bbgo-%E5%9C%A8%E5%AE%B6%E4%B9%9F%E5%8F%AF%E4%BB%A5%E8%B7%91%E7%B6%B2%E6%A0%BC%E7%AD%96%E7%95%A5%E7%A8%8B%E5%BC%8F-cdb59e171cf9\">BBGO — 在家也可以跑網格策略程式</a> 這篇教學所提供的指令，執行它。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">bash &lt;(curl -s https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;c9s&#x2F;bbgo&#x2F;main&#x2F;scripts&#x2F;setup-grid.sh)</span><br></pre></td></tr></table></figure></li>\n<li><p>根據提示設定 API KEY 後，可看到產出的 .env.local 檔案內容如下<br><img src=\"/2021/04/23/202104/20210423-DigiCur3/API3.png\" alt=\"API\"></p>\n</li>\n<li><p>參考教學文章，將策略設定改為自己試用的 MAXTWD 商品， bbgo.yaml 大概會長這個樣子。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">riskControls:</span></span><br><span class=\"line\">  <span class=\"attr\">sessionBased:</span></span><br><span class=\"line\">    <span class=\"attr\">max:</span>   <span class=\"comment\"># 這邊是針對 MAX 交易所設定的風險控管</span></span><br><span class=\"line\">      <span class=\"attr\">orderExecutor:</span></span><br><span class=\"line\">        <span class=\"attr\">bySymbol:</span></span><br><span class=\"line\">          <span class=\"attr\">MAXTWD:</span> <span class=\"comment\"># 這邊是要啟用風險控管的市場 BTC=Base USDT=Quote</span></span><br><span class=\"line\">            <span class=\"attr\">basic:</span>   <span class=\"comment\"># 使用基本的風險控管功能</span></span><br><span class=\"line\">              <span class=\"attr\">minQuoteBalance:</span> <span class=\"number\">50000.0</span>     <span class=\"comment\"># 最少要保留多少 TWD</span></span><br><span class=\"line\">              <span class=\"attr\">maxBaseAssetBalance:</span> <span class=\"number\">8000.0</span>   <span class=\"comment\"># 最多可以買到多少 MAX</span></span><br><span class=\"line\">              <span class=\"attr\">minBaseAssetBalance:</span> <span class=\"number\">3000.0</span>   <span class=\"comment\"># 最少要保留多少 MAX 避免賣超</span></span><br><span class=\"line\">              <span class=\"attr\">maxOrderAmount:</span> <span class=\"number\">15000.0</span>       <span class=\"comment\"># 每單最多的金額，這邊是 TWD</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">exchangeStrategies:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">on:</span> <span class=\"string\">max</span>   <span class=\"comment\"># 策略要跑在 MAX</span></span><br><span class=\"line\">  <span class=\"attr\">grid:</span>     <span class=\"comment\"># 使用內建的基本網格策略</span></span><br><span class=\"line\">    <span class=\"attr\">symbol:</span> <span class=\"string\">MAXTWD</span>     </span><br><span class=\"line\">    <span class=\"attr\">quantity:</span> <span class=\"number\">1000</span></span><br><span class=\"line\">    <span class=\"attr\">gridNumber:</span> <span class=\"number\">5</span>     </span><br><span class=\"line\">    <span class=\"attr\">profitSpread:</span> <span class=\"number\">0.5</span>  </span><br><span class=\"line\">    <span class=\"attr\">upperPrice:</span> <span class=\"number\">12.51</span> <span class=\"comment\"># 網格最上方的價格</span></span><br><span class=\"line\">    <span class=\"attr\">lowerPrice:</span> <span class=\"number\">10.01</span> <span class=\"comment\"># 網格最下方的價格</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>執行自動化交易程式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> .env.local &amp;&amp; ./bbgo run --config bbgo.yaml</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>程式執行中的畫面如下，過程式剛好也有順利成交 :)<br><img src=\"/2021/04/23/202104/20210423-DigiCur3/MAXBOT1.png\" alt=\"BOT\"><br><img src=\"/2021/04/23/202104/20210423-DigiCur3/MAXBOT2.png\" alt=\"BOT\"></p>\n</li>\n</ol>\n<h2 id=\"其他雜記\"><a href=\"#其他雜記\" class=\"headerlink\" title=\"其他雜記\"></a>其他雜記</h2><ol>\n<li>最近這兩週申請幣安帳號，做 KYC 一直卡在最後一關被退 (即類似 FaceID 的驗證一直沒過) 不知道原因是啥。</li>\n<li>因為沒順利弄完幣安帳號，所以又到處亂申請了一些帳號，反而很意外的順利申請好 BlockFi 。 這邊暫時沒遇到什麼額度或身份驗證的問題，用起來還蠻滿意的。</li>\n<li>MAX 交易所有時在穩定幣如 USDT、USDC 等有高度溢價，所以也申請好了由國內外幣帳號約定轉入 BlockFi 。<ul>\n<li>連續兩天轉出 2xxx 美金，找白天空檔休息時間申請，到了晚上美東交易時間(跟台北相差 12 小時) 10 點多就確認入帳。</li>\n<li>費用有: 銀行轉帳時手續費 400 (其中內含郵電費 300 )，實際到帳會再少美金 22 元，轉出一次總費用可粗抓 TWD 1,000。</li>\n<li>BlockFi 收到的美金會 1:1 轉成 GUSD，然後可再 1:1 Trade 換成 USDC ( USDT 不一定能 1:1 全換)。<br><img src=\"/2021/04/23/202104/20210423-DigiCur3/Trade1.png\" alt=\"Trade\"><br><img src=\"/2021/04/23/202104/20210423-DigiCur3/Trade2.png\" alt=\"Trade\"><br><img src=\"/2021/04/23/202104/20210423-DigiCur3/Trade3.png\" alt=\"Trade\"><br><img src=\"/2021/04/23/202104/20210423-DigiCur3/Trade4.png\" alt=\"Trade\"><br><img src=\"/2021/04/23/202104/20210423-DigiCur3/Trade5.png\" alt=\"Trade\"><br><img src=\"/2021/04/23/202104/20210423-DigiCur3/Trade6.png\" alt=\"Trade\"></li>\n</ul>\n</li>\n<li>BlockFi 存 USDC 年化報酬，目前是 8.6 % ，其中， Accrued Interest 應該是每天更新一次，然後據說每月配息，未來實際收息後再來驗證。<br><img src=\"/2021/04/23/202104/20210423-DigiCur3/Account.png\" alt=\"Account\"></li>\n<li>目前仍在申請中的服務或商品<ul>\n<li>永豐大戶的兩張信用卡 (可測試信用卡買幣的費用及回饋金)</li>\n<li>Bitfinex 帳號 (用來信用卡買幣的交易所)</li>\n<li>Crypto.com公司所推出的加密貨幣簽帳金融卡（Cryptocurrency Debit Card）</li>\n</ul>\n</li>\n</ol>\n","categories":["fintech"],"tags":["digital currency"]},{"title":"2022-06-25 git 雜記","url":"/2022/06/25/202206/20220625-git/","content":"<div class=\"note default\">\n            <p>2022-06-25 git 雜記</p>\n          </div>\n\n<a id=\"more\"></a>\n\n<h2 id=\"在-openSUSE-安裝-git\"><a href=\"#在-openSUSE-安裝-git\" class=\"headerlink\" title=\"在 openSUSE 安裝 git\"></a>在 openSUSE 安裝 git</h2><h3 id=\"安裝指令與參考網站\"><a href=\"#安裝指令與參考網站\" class=\"headerlink\" title=\"安裝指令與參考網站\"></a>安裝指令與參考網站</h3><ul>\n<li>安裝指令<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo zypper <span class=\"keyword\">in</span> git-core  </span><br><span class=\"line\"></span><br><span class=\"line\">git --version</span><br></pre></td></tr></table></figure></li>\n<li>參考網站<br><a href=\"https://nanxiao.me/en/how-to-install-git-on-suse/\">How to install git on SUSE</a></li>\n</ul>\n<h2 id=\"Sourcetree-密碼權限設定\"><a href=\"#Sourcetree-密碼權限設定\" class=\"headerlink\" title=\"Sourcetree 密碼權限設定\"></a>Sourcetree 密碼權限設定</h2><ol>\n<li>在使用 Sourcetree push 到 Bitbucket 時，出現以下錯誤訊息<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">Bitbucket Cloud recently stopped supporting account passwords for Git authentication</span><br></pre></td></tr></table></figure></li>\n<li>根據錯誤訊息，找到<a href=\"https://stackoverflow.com/questions/71472009/bitbucket-cloud-recently-stopped-supporting-account-passwords-for-git-authentica\">解決方式</a></li>\n</ol>\n<p>摘錄回文A (重要設定步驟)</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">In personal Settings, in the left panel you will find &quot;access management&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">Under that you will find &quot;app passwords&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">Click on that --&gt; Then you will routed to create app password page</span><br><span class=\"line\"></span><br><span class=\"line\">There you can give the required permissions and create password (Note: You have to store that password somewhere as it will be displayed only once)</span><br><span class=\"line\"></span><br><span class=\"line\">When you push the code to any repo...use your app password instead of your account password (No need to change any settings in the git_config file)</span><br></pre></td></tr></table></figure>\n\n<p>摘錄回文B (調整後的 URL 格式)</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://&#123;&#123;BitbucketUsername&#125;&#125;:&#123;&#123;AppPassword&#125;&#125;@bitbucket.org/&#123;&#123;RepoName&#125;&#125;.git</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>step by step 實作</li>\n</ol>\n<ul>\n<li><p>在<a href=\"https://bitbucket.org/dashboard/overview\"> Bitbucket </a>進入 Personal settings 頁面<br><img src=\"/2022/06/25/202206/20220625-git/001.png\" alt=\"001\"></p>\n</li>\n<li><p>進入 App passwords 頁面<br><img src=\"/2022/06/25/202206/20220625-git/002.png\" alt=\"002\"></p>\n</li>\n<li><p>填寫 Label ，勾選適當權限，按下 Create 按鈕<br><img src=\"/2022/06/25/202206/20220625-git/003.png\" alt=\"003\"></p>\n</li>\n<li><p>看到彈現出的視窗後，記得儲存該密碼<br><img src=\"/2022/06/25/202206/20220625-git/004.png\" alt=\"004\"></p>\n</li>\n<li><p>回到 Sourcetree 程式，點擊右上角的 Settings 齒輪圖示<br><img src=\"/2022/06/25/202206/20220625-git/005.png\" alt=\"005\"></p>\n</li>\n<li><p>點選 Path 後，再按下 Edit 按鈕<br><img src=\"/2022/06/25/202206/20220625-git/006.png\" alt=\"006\"></p>\n</li>\n<li><p>依下列規則調整 URL/Path</p>\n<ul>\n<li>假設先前取得的密碼是 1rTKwWrlMwyUesWe5jB3，在密碼前碼加上: 再放回原始設定值中的 @ 前方</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">:1rTKwWrlMwyUesWe5jB3 (在密碼前碼加上:)</span><br><span class=\"line\"></span><br><span class=\"line\">https://hccga7@bitbucket.org/hccga7/sourcetree_practice.git (原始值)</span><br><span class=\"line\"></span><br><span class=\"line\">https://hccga7:1rTKwWrlMwyUesWe5jB3@bitbucket.org/hccga7/sourcetree_practice.git (調整後)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>設定完成後，即可成功 push<br><img src=\"/2022/06/25/202206/20220625-git/007.png\" alt=\"007\"></li>\n</ul>\n<h3 id=\"未整理的部份\"><a href=\"#未整理的部份\" class=\"headerlink\" title=\"未整理的部份\"></a>未整理的部份</h3><p>C:\\Users\\HUNGCHIA\\AppData\\Local\\Atlassian\\Sourcetree  </p>\n<p>Bitbucket Cloud recently stopped supporting account passwords for Git authentication.  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin https://&lt;Bitbucket_Username&gt;:&lt;App_Password&gt;@bitbucket.org/&lt;Repo_Name&gt;.git  </span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin https://bitbucket.org/hccga7:4???wWr*&amp;*w???SwE5jb7@bitbucket.org/hccga7/sourcetree_practice.git/  </span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin https://&lt;Bitbucket_Username&gt;:&lt;App_Password&gt;@bitbucket.org/&lt;Repo_Name&gt;.git  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://hccga7:4RtKwWrLmwyUeSwE5jb7@bitbucket.org/hccga7/sourcetree_practice.git\">https://hccga7:4RtKwWrLmwyUeSwE5jb7@bitbucket.org/hccga7/sourcetree_practice.git</a></p>\n<h3 id=\"未整理的部份-SSH\"><a href=\"#未整理的部份-SSH\" class=\"headerlink\" title=\"未整理的部份-SSH\"></a>未整理的部份-SSH</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin git@github.com:user_name/project.git</span><br><span class=\"line\">git remote <span class=\"built_in\">set</span>-url origin git@github.com:HankChangGSS/GitIoSrc.git</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>文章重點備份</p>\n<ul>\n<li><p><a href=\"https://stackoverflow.com/questions/3431314/github-no-supported-authentication-methods-available\">github: No supported authentication methods available</a>  </p>\n<ul>\n<li>Using TortoiseGit<br>TortoiseGit &gt; Settings … Network … SSH Client: C:\\Program Files\\Git\\usr\\bin\\ssh.exe<br>Location my vary. On one computer it was in C:\\Program Files (x86)\\Git\\bin\\ssh.exe<br><img src=\"/2022/06/25/202206/20220625-git/008.png\" alt=\"008\"></li>\n</ul>\n</li>\n<li><p><a href=\"https://www.minwt.com/webdesign-dev/html/23197.html\">GitHub 將不再支援以帳密的方式登入改採SSH，如何在GitHub配置SSH KEY</a></p>\n</li>\n<li><p><a href=\"https://segmentfault.com/a/1190000005125610\">设置 SSH 使用 hexo deploy 时免输用户名密码</a><br>  <img src=\"/2022/06/25/202206/20220625-git/hexo_01.png\" alt=\"001\"><br>  <img src=\"/2022/06/25/202206/20220625-git/hexo_02.png\" alt=\"001\"><br>  <img src=\"/2022/06/25/202206/20220625-git/hexo_03.png\" alt=\"001\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>- [使用 SSH 金鑰與 GitHub 連線](https://cynthiachuang.github.io/Generating-a-Ssh-Key-and-Adding-It-to-the-Github/)  \n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -b 4096 -C <span class=\"string\">&quot;hankchanggss@gmail.com&quot;</span></span><br></pre></td></tr></table></figure></code></pre>\n<p>D:\\Blog\\_ssh_key&gt;ssh-keygen -t rsa -b 4096 -C “<a href=\"mailto:&#x68;&#97;&#110;&#x6b;&#99;&#104;&#97;&#x6e;&#x67;&#103;&#x73;&#x73;&#x40;&#103;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#111;&#x6d;\">&#x68;&#97;&#110;&#x6b;&#99;&#104;&#97;&#x6e;&#x67;&#103;&#x73;&#x73;&#x40;&#103;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#111;&#x6d;</a>“<br>Generating public/private rsa key pair.<br>Enter file in which to save the key (C:\\Users\\HUNGCHIA/.ssh/id_rsa):<br>C:\\Users\\HUNGCHIA/.ssh/id_rsa already exists.<br>Overwrite (y/n)? y<br>Enter passphrase (empty for no passphrase):<br>Enter same passphrase again:<br>Your identification has been saved in C:\\Users\\HUNGCHIA/.ssh/id_rsa.<br>Your public key has been saved in C:\\Users\\HUNGCHIA/.ssh/id_rsa.pub.<br>The key fingerprint is:<br>SHA256:/kMIrvJr1/LJWuDf62YUVLcV0C9uuE3+m66zx8RwlQw <a href=\"mailto:&#104;&#97;&#110;&#x6b;&#99;&#104;&#97;&#x6e;&#103;&#103;&#115;&#115;&#64;&#x67;&#109;&#x61;&#x69;&#108;&#46;&#99;&#111;&#x6d;\">&#104;&#97;&#110;&#x6b;&#99;&#104;&#97;&#x6e;&#103;&#103;&#115;&#115;&#64;&#x67;&#109;&#x61;&#x69;&#108;&#46;&#99;&#111;&#x6d;</a><br>The key’s randomart image is:<br>+—[RSA 4096]—-+<br>|           ..E*.+|<br>|          .  . *.|<br>|         .    . o|<br>|      .   .  ….|<br>|     …S. . o+. |<br>|     ..o. o . +o |<br>|     …oo   <em>o  |<br>|  . o o+.++ ..oo.|<br>|   +oo.+=+=o o</em>=o|<br>+—-[SHA256]—–+</p>\n<p>D:\\Blog\\_ssh_key&gt;  </p>\n<p>eval “$(ssh-agent -s)”<br>ssh-add ~/.ssh/id_rsa</p>\n","categories":["技術","hexo","linux","git"],"tags":["git","sourcetree -hexo"]},{"title":"保險法","url":"/2022/06/26/ChtLaw/%E4%BF%9D%E9%9A%AA%E6%B3%95/","content":"<div class=\"note default\">\n            <p>保險法</p>\n          </div>\n\n<a id=\"more\"></a>\n\n<h2 id=\"法規名稱：保險法\"><a href=\"#法規名稱：保險法\" class=\"headerlink\" title=\"法規名稱：保險法\"></a>法規名稱：保險法</h2><p>修正日期：民國 110 年 05 月 26 日 </p>\n<h3 id=\"第-一-章-總則\"><a href=\"#第-一-章-總則\" class=\"headerlink\" title=\"第 一 章 總則\"></a>第 一 章 總則</h3><h4 id=\"第-一-節-定義及分類\"><a href=\"#第-一-節-定義及分類\" class=\"headerlink\" title=\"第 一 節 定義及分類\"></a>第 一 節 定義及分類</h4><div class=\"ChtLaw\">\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">A</th>\n<th align=\"left\">B</th>\n<th align=\"left\">C</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><span class=\"ChtLawArticle\">第 1 條</span></td>\n<td align=\"left\">本法所稱保險，謂當事人約定，一方交付保險費於他方，他方對於因不可預料，或不可抗力之事故所致之損害，負擔賠償財物之行為。<BR>根據前項所訂之契約，稱為保險契約。</td>\n<td align=\"left\"><div class=\"ChtLawAudio\"><audio controls src=\"/2022/06/26/ChtLaw/%E4%BF%9D%E9%9A%AA%E6%B3%95/01_005.mp3\"></audio><audio controls src=\"/2022/06/26/ChtLaw/%E4%BF%9D%E9%9A%AA%E6%B3%95/01_006.mp3\"></audio></div></td>\n</tr>\n<tr>\n<td align=\"center\"><span class=\"ChtLawArticle\">第 2 條</span></td>\n<td align=\"left\">本法所稱保險人，指經營保險事業之各種組織，在保險契約成立時，有保險費之請求權；在承保危險事故發生時，依其承保之責任，負擔賠償之義務。</td>\n<td align=\"left\"><div class=\"ChtLawAudio\"><audio controls src=\"/2022/06/26/ChtLaw/%E4%BF%9D%E9%9A%AA%E6%B3%95/01_007.mp3\"></div></td>\n</tr>\n<tr>\n<td align=\"center\"><span class=\"ChtLawArticle\">第 3 條</span></td>\n<td align=\"left\">本法所稱要保人，指對保險標的具有保險利益，向保險人申請訂立保險契約，並負有交付保險費義務之人。</td>\n<td align=\"left\"><div class=\"ChtLawAudio\"><audio controls src=\"/2022/06/26/ChtLaw/%E4%BF%9D%E9%9A%AA%E6%B3%95/01_008.mp3\"></div></td>\n</tr>\n</tbody></table>\n</div>","categories":["法規","金融保險法規"],"tags":["law"]}]